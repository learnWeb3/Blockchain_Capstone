{
    "contractName": "SolnSquareVerifier",
    "abi": [
        {
            "constant": true,
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "paused",
                    "type": "bool"
                }
            ],
            "name": "setPaused",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_myid",
                    "type": "bytes32"
                },
                {
                    "name": "_result",
                    "type": "string"
                }
            ],
            "name": "__callback",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_index",
                    "type": "uint256"
                },
                {
                    "name": "_caller",
                    "type": "address"
                }
            ],
            "name": "add",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "_caller",
                    "type": "address"
                }
            ],
            "name": "isOwner",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_myid",
                    "type": "bytes32"
                },
                {
                    "name": "_result",
                    "type": "string"
                },
                {
                    "name": "_proof",
                    "type": "bytes"
                }
            ],
            "name": "__callback",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256"
                                }
                            ],
                            "name": "a",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256[2]"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256[2]"
                                }
                            ],
                            "name": "b",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256"
                                }
                            ],
                            "name": "c",
                            "type": "tuple"
                        }
                    ],
                    "name": "proof",
                    "type": "tuple"
                },
                {
                    "name": "input",
                    "type": "uint256[2]"
                }
            ],
            "name": "verifyTx",
            "outputs": [
                {
                    "name": "r",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenByIndex",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256"
                                }
                            ],
                            "name": "a",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256[2]"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256[2]"
                                }
                            ],
                            "name": "b",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "name": "X",
                                    "type": "uint256"
                                },
                                {
                                    "name": "Y",
                                    "type": "uint256"
                                }
                            ],
                            "name": "c",
                            "type": "tuple"
                        }
                    ],
                    "name": "proof",
                    "type": "tuple"
                },
                {
                    "name": "input",
                    "type": "uint256[2]"
                }
            ],
            "name": "mintToken",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "setTokenURI",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "index",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "name": "caller",
                    "type": "address"
                }
            ],
            "name": "SolutionAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "caller",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "caller",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "_oldOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "_newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xa5e1826c2283b2f3fb7d41e6ac302211181f2f4f9cefbf29dff77f2b1b00cdc9\",\"urls\":[\"bzzr://0e1f3b98bf689d878e51bf2542bdd809b8c4f1b3cf893509970f986eaaa123fd\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0x9159c209629614082bae04b2d83e03de30c9de3cd75dd3eae210b21393169c4e\",\"urls\":[\"bzzr://f54e459b139040d5d348e97b331e60381e064489a01df0e501e765fd510a082c\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x20081be3d6c39fa3b532069d19f483f0b5dbe3630ce12cdb101f082c3863c9fe\",\"urls\":[\"bzzr://ad1114ddec065a905537ced26e484a6971e2d070d4990fb262ac22b4de25a9ec\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"/home/bzzzpy/Documents/Blockchain-Capstone/verifier.sol\":{\"keccak256\":\"0x2609ce16b4b7f91f93501211e378f28197337af903c30b09d30c73a7c5c948de\",\"urls\":[\"bzzr://ef68b1393408475517a450e949adf53b25d3fd24e8786def2f6e485d04ceffa1\"]}},\"version\":1}",
    "bytecode": "600a60809081527f5265616c20546f6b656e0000000000000000000000000000000000000000000060a052600460c09081527f5245414c0000000000000000000000000000000000000000000000000000000060e052610160604052603f6101008181529062002cc56101203960008054600160a01b60ff02196001600160a01b03199091163317169055620000bc7f01ffc9a7000000000000000000000000000000000000000000000000000000006200014f602090811b901c565b620000d46380ac58cd60e01b6200014f60201b60201c565b620000ec63780e9d6360e01b6200014f60201b60201c565b82516200010190600f906020860190620001bf565b50815162000117906010906020850190620001bf565b5080516200012d906011906020840190620001bf565b5062000146635b5e139f60e01b6200014f60201b60201c565b50505062000264565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200017f57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600160208190526040909120805460ff19169091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200020257805160ff191683800117855562000232565b8280016001018555821562000232579182015b828111156200023257825182559160200191906001019062000215565b506200024092915062000244565b5090565b6200026191905b808211156200024057600081556001016200024b565b90565b612a5180620002746000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063893d20e811610097578063bff2612611610071578063bff2612614610323578063c87b56dd14610336578063e985e9c514610356578063f2fde38b1461036957610173565b8063893d20e8146102f5578063a22cb465146102fd578063b88d4fde1461031057610173565b806342842e0e1461028357806343cd76fc146102965780634f6ccce7146102a9578063534f7527146102bc5780636352211e146102cf57806370a08231146102e257610173565b806327dc297e1161013057806327dc297e146102115780632b8bbbe8146102245780632f54bf6e146102375780632f745c591461024a57806338bbfa501461025d57806340c10f191461027057610173565b806301ffc9a714610178578063081812fc146101a1578063095ea7b3146101c157806316c38b3c146101d657806318160ddd146101e957806323b872dd146101fe575b600080fd5b61018b610186366004612525565b61037c565b6040516101989190612859565b60405180910390f35b6101b46101af366004612593565b61039f565b6040516101989190612807565b6101d46101cf36600461241c565b6103ba565b005b6101d46101e436600461244c565b610481565b6101f1610540565b60405161019891906128f8565b6101d461020c366004612326565b610547565b6101d461021f36600461246a565b61056a565b6101d46102323660046125b1565b61058a565b61018b6102453660046122ce565b61067b565b6101f161025836600461241c565b61068f565b6101d461026b3660046124b2565b610565565b61018b61027e36600461241c565b6106dd565b6101d4610291366004612326565b610776565b61018b6102a4366004612561565b610791565b6101f16102b7366004612593565b610816565b6101d46102ca366004612561565b61084a565b6101b46102dd366004612593565b610927565b6101f16102f03660046122ce565b610942565b6101b4610963565b6101d461030b3660046123ec565b610972565b6101d461031e366004612373565b6109f7565b6101d4610331366004612593565b610a1d565b610349610344366004612593565b610af2565b6040516101989190612867565b61018b6103643660046122ec565b610ba5565b6101d46103773660046122ce565b610bd3565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b6000908152600360205260409020546001600160a01b031690565b60006103c582610927565b9050806001600160a01b0316836001600160a01b0316141561040557604051600160e51b62461bcd0281526004016103fc906128d8565b60405180910390fd5b61040e3361067b565b8061041e575061041e8133610ba5565b61042757600080fd5b60008281526003602052604080822080546001600160a01b031916331790555183916001600160a01b0386811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000546001600160a01b031633146104ae57604051600160e51b62461bcd0281526004016103fc906128e8565b6000805482158015600160a01b0274ff000000000000000000000000000000000000000019909216919091179091556105115760405133907f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890600090a261053d565b60405133907f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90600090a25b50565b6008545b90565b6105513382610c4b565b61055a57600080fd5b610565838383610caa565b505050565b6040805160008152602081019091526105869083908390610565565b5050565b610592611ec2565b506040805180820182528381526001600160a01b0383811660208084018281526014805460018082018355600092835287517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec60029093029283015583517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed90920180546001600160a01b0319908116938916939093179055858352601590945287822087518155925192909301805490931691909416179055925191929185917f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d91a3505050565b6000546001600160a01b0391821691161490565b600061069a83610942565b82106106a557600080fd5b6001600160a01b03831660009081526006602052604090208054839081106106c957fe5b906000526020600020015490505b92915050565b600080546001600160a01b0316331461070b57604051600160e51b62461bcd0281526004016103fc906128e8565b6107158383610cc9565b604051600160e11b635ff93093028152309063bff261269061073b9085906004016128f8565b600060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b5060019695505050505050565b610565838383604051806020016040528060008152506109f7565b604080516002808252606080830184526000939092919060208301908038833901905050905060005b60028110156107f3578381600281106107cf57fe5b60200201518282815181106107e057fe5b60209081029190910101526001016107ba565b506107fe8185610ce6565b61080c5760019150506106d7565b60009150506106d7565b6000610820610540565b821061082b57600080fd5b6008828154811061083857fe5b90600052602060002001549050919050565b80513360008181526015602052604090205482141561087e57604051600160e51b62461bcd0281526004016103fc90612878565b600061088a8585610791565b9050806108ac57604051600160e51b62461bcd0281526004016103fc906128b8565b8351604051600160e31b630571777d0281523091632b8bbbe8916108d591903390600401612906565b600060405180830381600087803b1580156108ef57600080fd5b505af1158015610903573d6000803e3d6000fd5b505050506109153361027e6013610e45565b506109206013610e49565b5050505050565b6000908152600260205260409020546001600160a01b031690565b6001600160a01b03811660009081526004602052604081206106d790610e45565b6000546001600160a01b031690565b6001600160a01b03821633141561098857600080fd5b3360008181526005602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906109eb908590612859565b60405180910390a35050565b610a02848484610547565b610a0e84848484610e52565b610a1757600080fd5b50505050565b610a2681610f1d565b610a2f57600080fd5b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152610acf9390929091830182828015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b5050505050610aca83610f3a565b610ffe565b600082815260126020908152604090912082516105869391929190910190611ed9565b6060610afd82610f1d565b610b0657600080fd5b60008281526012602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610b995780601f10610b6e57610100808354040283529160200191610b99565b820191906000526020600020905b815481529060010190602001808311610b7c57829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000546001600160a01b03163314610c0057604051600160e51b62461bcd0281526004016103fc906128e8565b6001600160a01b038116610c2957604051600160e51b62461bcd0281526004016103fc906128c8565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080610c5783610927565b9050806001600160a01b0316846001600160a01b03161480610c925750836001600160a01b0316610c878461039f565b6001600160a01b0316145b80610ca25750610ca28185610ba5565b949350505050565b610cb5838383611041565b610cbf8382611148565b6105658282611236565b610cd38282611274565b610cdd8282611236565b6105868161132c565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001610d11611f57565b610d19611370565b9050806080015151855160010114610d3057600080fd5b610d38611f9f565b50604080518082019091526000808252602082018190525b8651811015610dc25783878281518110610d6657fe5b602002602001015110610d7857600080fd5b610db882610db385608001518460010181518110610d9257fe5b60200260200101518a8581518110610da657fe5b6020026020010151611765565b6117bd565b9150600101610d50565b50610de5818360800151600081518110610dd857fe5b60200260200101516117bd565b9050610e2985600001518660200151610dfd8461180b565b8560400151610e0f8a6040015161180b565b60608801518851610e1f9061180b565b8960200151611895565b610e3957600193505050506106d7565b50600095945050505050565b5490565b80546001019055565b6000610e66846001600160a01b03166119e5565b610e7257506001610ca2565b604051600160e11b630a85bd010281526000906001600160a01b0386169063150b7a0290610eaa9088908a9089908990600401612815565b602060405180830381600087803b158015610ec457600080fd5b505af1158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610efc9190810190612543565b6001600160e01b031916600160e11b630a85bd010214915050949350505050565b6000908152600260205260409020546001600160a01b0316151590565b606081610f6257506040805180820190915260018152600160fc1b600302602082015261039a565b8160005b8115610f7a57600101600a82049150610f66565b6060816040519080825280601f01601f191660200182016040528015610fa7576020820181803883390190505b50905060001982015b8515610ff557600a860660300160f81b82828060019003935081518110610fd357fe5b60200101906001600160f81b031916908160001a905350600a86049550610fb0565b50949350505050565b606061103a8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611a1e565b9392505050565b61104a81610927565b6001600160a01b0316836001600160a01b03161461107d57604051600160e51b62461bcd0281526004016103fc906128a8565b6001600160a01b0382166110a657604051600160e51b62461bcd0281526004016103fc90612898565b600081815260036020908152604080832080546001600160a01b03191690556001600160a01b0386168352600490915290206110e190611c32565b6001600160a01b038216600090815260046020526040902061110290610e49565b80826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6001600160a01b03821660009081526006602052604081205461117290600163ffffffff611c4916565b60008381526007602052604090205490915080821461120d576001600160a01b03841660009081526006602052604081208054849081106111af57fe5b906000526020600020015490508060066000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106111ed57fe5b600091825260208083209091019290925591825260079052604090208190555b6001600160a01b0384166000908152600660205260409020805490610920906000198301611fb9565b6001600160a01b0390911660009081526006602081815260408084208054868652600784529185208290559282526001810183559183529091200155565b61127d81610f1d565b15801561129257506001600160a01b03821615155b6112b157604051600160e51b62461bcd0281526004016103fc90612888565b600081815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600490915290206112f090610e49565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611378611f57565b6040805180820182527f11d04051dfa24197c951db85811bdd2c379ff160d59c527900376803b5da6d1281527f2c3550f6a11179451f225b11c1b6ec36dd23ee190619bfdd0976b34989f43a526020808301919091529083528151608080820184527f1add679852e7cbe6cdaf83e2dc628a45fdcb3a9819d3914ef37dd17003dbfa068285019081527f08e0663edef3226cb287662a5b57e6f66519f68e6ce1ee5e0a7a2ca279c1d3d7606080850191909152908352845180860186527f13dbfd733214ef94afec2f3d608c9c93ac31cf2d8b4e10b6ae96089df973f2ce81527f21196295f0fb5aae2e67680f3f741822014f709f39f2205260faf0423a606045818601528385015285840192909252835180820185527f234a9d17c9dfc7606f7f4639f74e478e24adc9432402422bd0b4e6055f700b948186019081527f078d4fbb6c4ba83e248d6af6c57898189b1d42205d04aeb287283c52f341d6fd828501528152845180860186527f0cf8bc6df8078edf3be7861769600ffdd0f6cdbee70ed6de5b4c788f68600b8081527f20cee0a54011e67088ada2eb368a0c735232d061da4ee533faae69d2940ea598818601528185015285850152835180820185527f24889e8710fd954f3bf426dd31ae4da63b16f3366d51a7d5e6b9fbfabbd08e8b8186019081527f0498faf797d188c9bd9e7e6c8f20a31d758867bd07bd1230829ba08d2b21e835828501528152845180860186527f0ec7f959e443951e634636a8d799ccb0b55a9f6d0d57cdc9f79298d8e345c69a81527f04c337b781b0d2d4920791f02f3950f1020ed57355024463d0737e42f5e7103d818601528185015291850191909152825160038082529181019093529082015b6115fc611f9f565b8152602001906001900390816115f457505060808201908152604080518082019091527f26c050f4fdababfea0ca4ac42b61434e9aa3238121e4717f46779983dea95efd81527f153796ebc5c265b8d9f3e12a37c3347ad9d1782fb493f7336efaef309dd8f30260208201529051805160009061167557fe5b602002602001018190525060405180604001604052807f1bcf0460dda7644589d32f728db1bcf71a6a8335f4f984fdbb2af42de8a631c481526020017f225c4e5a8a933d5e2934bee490358a947627b378631feb262e238b38a2bcce3c81525081608001516001815181106116e657fe5b602002602001018190525060405180604001604052807f1fdf934e7abaa0e1d83559a60bdc1c75f721520859075a13afd4c3abc218b07581526020017f2f2147805e090d941e4915e648a8f30686e77173e7179c0661cf6ef7d5e868d4815250816080015160028151811061175757fe5b602002602001018190525090565b61176d611f9f565b611775611fdd565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080156117a8576117aa565bfe5b50806117b557600080fd5b505092915050565b6117c5611f9f565b6117cd611ffb565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080156117a8576117aa565b611813611f9f565b81517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479015801561184657506020830151155b15611866575050604080518082019091526000808252602082015261039a565b6040518060400160405280846000015181526020018285602001518161188857fe5b0690920390915292915050565b60408051600480825260a0820190925260009160609190816020015b6118b9611f9f565b8152602001906001900390816118b157505060408051600480825260a0820190925291925060609190602082015b6118ef612019565b8152602001906001900390816118e75790505090508a8260008151811061191257fe5b6020026020010181905250888260018151811061192b57fe5b6020026020010181905250868260028151811061194457fe5b6020026020010181905250848260038151811061195d57fe5b6020026020010181905250898160008151811061197657fe5b6020026020010181905250878160018151811061198f57fe5b602002602001018190525085816002815181106119a857fe5b602002602001018190525083816003815181106119c157fe5b60200260200101819052506119d68282611c8b565b9b9a5050505050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610ca2575050151592915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015611a72576020820181803883390190505b509050806000805b8851811015611acb57888181518110611a8f57fe5b602001015160f81c60f81b838380600101945081518110611aac57fe5b60200101906001600160f81b031916908160001a905350600101611a7a565b5060005b8751811015611b2057878181518110611ae457fe5b602001015160f81c60f81b838380600101945081518110611b0157fe5b60200101906001600160f81b031916908160001a905350600101611acf565b5060005b8651811015611b7557868181518110611b3957fe5b602001015160f81c60f81b838380600101945081518110611b5657fe5b60200101906001600160f81b031916908160001a905350600101611b24565b5060005b8551811015611bca57858181518110611b8e57fe5b602001015160f81c60f81b838380600101945081518110611bab57fe5b60200101906001600160f81b031916908160001a905350600101611b79565b5060005b8451811015611c1f57848181518110611be357fe5b602001015160f81c60f81b838380600101945081518110611c0057fe5b60200101906001600160f81b031916908160001a905350600101611bce565b50909d9c50505050505050505050505050565b8054611c4590600163ffffffff611c4916565b9055565b600061103a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611e93565b60008151835114611c9b57600080fd5b8251604080516006830280825260c084028201602001909252606090828015611cce578160200160208202803883390190505b50905060005b83811015611e5357868181518110611ce857fe5b602002602001015160000151828260060260000181518110611d0657fe5b602002602001018181525050868181518110611d1e57fe5b602002602001015160200151828260060260010181518110611d3c57fe5b602002602001018181525050858181518110611d5457fe5b60209081029190910101515160016020020151828260060260020181518110611d7957fe5b602002602001018181525050858181518110611d9157fe5b602090810291909101015151518251839060036006850201908110611db257fe5b602002602001018181525050858181518110611dca57fe5b602002602001015160200151600160028110611de257fe5b6020020151828260060260040181518110611df957fe5b602002602001018181525050858181518110611e1157fe5b602002602001015160200151600060028110611e2957fe5b6020020151828260060260050181518110611e4057fe5b6020908102919091010152600101611cd4565b50611e5c61203e565b6000602082602086026020860160086107d05a03fa90508080156117a8575080611e8557600080fd5b505115159695505050505050565b60008184841115611eba57604051600160e51b62461bcd0281526004016103fc9190612867565b505050900390565b604080518082019091526000808252602082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f1a57805160ff1916838001178555611f47565b82800160010185558215611f47579182015b82811115611f47578251825591602001919060010190611f2c565b50611f5392915061205c565b5090565b604051806101e00160405280611f6b611f9f565b8152602001611f78612019565b8152602001611f85612019565b8152602001611f92612019565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156105655760008381526020902061056591810190830161205c565b60405180606001604052806003906020820280388339509192915050565b60405180608001604052806004906020820280388339509192915050565b604051806080016040528061202c612076565b8152602001612039612076565b905290565b60405180602001604052806001906020820280388339509192915050565b61054491905b80821115611f535760008155600101612062565b60405180604001604052806002906020820280388339509192915050565b600061103a823561299b565b600082601f8301126120b157600080fd5b60026120c46120bf82612948565b612921565b915081838560208402820111156120da57600080fd5b60005b8381101561210657816120f0888261217d565b84525060209283019291909101906001016120dd565b5050505092915050565b600082601f83011261212157600080fd5b600261212f6120bf82612948565b9150818385602084028201111561214557600080fd5b60005b83811015612106578161215b888261217d565b8452506020928301929190910190600101612148565b600061103a82356129a6565b600061103a8235610544565b600061103a82356129b7565b600061103a82516129b7565b600082601f8301126121b257600080fd5b81356121c06120bf82612966565b915080825260208301602083018583830111156121dc57600080fd5b6121e78382846129d5565b50505092915050565b60006040828403121561220257600080fd5b61220c6040612921565b9050600061221a848461217d565b825250602061222b8484830161217d565b60208301525092915050565b60006080828403121561224957600080fd5b6122536040612921565b9050600061226184846120a0565b825250604061222b848483016120a0565b6000610100828403121561228557600080fd5b61228f6060612921565b9050600061229d84846121f0565b82525060406122ae84848301612237565b60208301525060c06122c2848285016121f0565b60408301525092915050565b6000602082840312156122e057600080fd5b6000610ca28484612094565b600080604083850312156122ff57600080fd5b600061230b8585612094565b925050602061231c85828601612094565b9150509250929050565b60008060006060848603121561233b57600080fd5b60006123478686612094565b935050602061235886828701612094565b92505060406123698682870161217d565b9150509250925092565b6000806000806080858703121561238957600080fd5b60006123958787612094565b94505060206123a687828801612094565b93505060406123b78782880161217d565b925050606085013567ffffffffffffffff8111156123d457600080fd5b6123e0878288016121a1565b91505092959194509250565b600080604083850312156123ff57600080fd5b600061240b8585612094565b925050602061231c85828601612171565b6000806040838503121561242f57600080fd5b600061243b8585612094565b925050602061231c8582860161217d565b60006020828403121561245e57600080fd5b6000610ca28484612171565b6000806040838503121561247d57600080fd5b6000612489858561217d565b925050602083013567ffffffffffffffff8111156124a657600080fd5b61231c858286016121a1565b6000806000606084860312156124c757600080fd5b60006124d3868661217d565b935050602084013567ffffffffffffffff8111156124f057600080fd5b6124fc868287016121a1565b925050604084013567ffffffffffffffff81111561251957600080fd5b612369868287016121a1565b60006020828403121561253757600080fd5b6000610ca28484612189565b60006020828403121561255557600080fd5b6000610ca28484612195565b600080610140838503121561257557600080fd5b60006125818585612272565b92505061010061231c85828601612110565b6000602082840312156125a557600080fd5b6000610ca2848461217d565b600080604083850312156125c457600080fd5b600061230b858561217d565b6125d9816129c4565b82525050565b6125d98161299b565b6125d9816129a6565b60006125fc8261298e565b6126068185612992565b93506126168185602086016129e1565b61261f81612a0d565b9093019392505050565b6000612636601583612992565b7f736f6c7574696f6e206d75737420626520756e69710000000000000000000000815260200192915050565b600061266f601a83612992565b7f696e76616c69642061646472657373206f7220746f6b656e4964000000000000815260200192915050565b60006126a8601983612992565b7f696e76616c696420726563697069656e74206164647265737300000000000000815260200192915050565b60006126e1601883612992565b7f66726f6d206d75737420626520746f6b656e206f776e65720000000000000000815260200192915050565b600061271a601383612992565b7f70726f6f66206d7573742062652076616c696400000000000000000000000000815260200192915050565b6000612753601883612992565b7f696e636f7272656374206164647265737320666f726d61740000000000000000815260200192915050565b600061278c602183612992565b7f726563697069656e74206d757374206e6f7420626520746f6b656e206f776e658152600160f91b603902602082015260400192915050565b60006127d2601483612992565b7f63616c6c6572206d757374206265206f776e6572000000000000000000000000815260200192915050565b6125d981610544565b602081016106d782846125df565b6080810161282382876125df565b61283060208301866125df565b61283d60408301856127fe565b818103606083015261284f81846125f1565b9695505050505050565b602081016106d782846125e8565b6020808252810161103a81846125f1565b602080825281016106d781612629565b602080825281016106d781612662565b602080825281016106d78161269b565b602080825281016106d7816126d4565b602080825281016106d78161270d565b602080825281016106d781612746565b602080825281016106d78161277f565b602080825281016106d7816127c5565b602081016106d782846127fe565b6040810161291482856127fe565b61103a60208301846125d0565b60405181810167ffffffffffffffff8111828210171561294057600080fd5b604052919050565b600067ffffffffffffffff82111561295f57600080fd5b5060200290565b600067ffffffffffffffff82111561297d57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006106d7826129ab565b151590565b6001600160a01b031690565b6001600160e01b03191690565b60006106d78260006106d78261299b565b82818337506000910152565b60005b838110156129fc5781810151838201526020016129e4565b83811115610a175750506000910152565b601f01601f19169056fea265627a7a723058206438a5670724d6a7a6c802751aa4bbe4d1a38f511ba32da9d3c45601b71865916c6578706572696d656e74616cf5003768747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
    "deployedBytecode": "",
    "sourceMap": "19520:276:0:-;521:1583:2;19520:276:0;;;;;;;;;;;;;;;521:1583:2;19520:276:0;;;;;;;;;;879:6;:19;;-1:-1:-1;;;;;;;;;;;;879:19:0;;;888:10;879:19;2365:15;;;3260:40;3279:20;3260:18;;;;;:40;;:::i;:::-;5387;5251:10;5406:20;;5387:18;;;:40;;:::i;:::-;12548:51;12182:10;12567:31;;12548:18;;;:51;;:::i;:::-;19668:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;19686:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;19708:28:0;;;;:13;;:28;;;;;:::i;:::-;;19742:49;19345:10;19761:29;;19742:18;;;:49;;:::i;:::-;19520:276;;;521:1583:2;;3586:148:0;3657:25;;;;;;3649:34;;;;;;3689:33;;;;;;3725:4;3689:33;;;;;;;;:40;;-1:-1:-1;;3689:40:0;;;;;;3586:148::o;521:1583:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;521:1583:2;;;-1:-1:-1;521:1583:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "521:1583:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;521:1583:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:127:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6527:157;;;;;;;;;:::i;:::-;;;;;;;;5936:587;;;;;;;;;:::i;:::-;;2077:177;;;;;;;;;:::i;13291:88::-;;;:::i;:::-;;;;;;;;7625:186;;;;;;;;;:::i;14323:116:1:-;;;;;;;;;:::i;1323:248:2:-;;;;;;;;;:::i;1635:96:0:-;;;;;;;;;:::i;12963:186::-;;;;;;;;;:::i;14443:184:1:-;;;;;;;;;:::i;21474:152:0:-;;;;;;;;;:::i;7815:142::-;;;;;;;;;:::i;22680:354:7:-;;;;;;;;;:::i;13702:138:0:-;;;;;;;;;:::i;1791:311:2:-;;;;;;;;;:::i;5711:152:0:-;;;;;;;;;:::i;5436:271::-;;;;;;;;;:::i;1735:72::-;;;:::i;6962:199::-;;;;;;;;;:::i;7961:221::-;;;;;;;;;:::i;20479:154::-;;;;;;;;;:::i;19880:141::-;;;;;;;;;:::i;:::-;;;;;;;;7468:153;;;;;;;;;:::i;1346:285::-;;;;;;;;;:::i;3388:127::-;-1:-1:-1;;;;;;3477:33:0;;3458:4;3477:33;;;:20;:33;;;;;;;;3388:127;;;;:::o;6527:157::-;6586:7;6655:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6655:24:0;;6527:157::o;5936:587::-;6068:18;6089:16;6097:7;6089;:16::i;:::-;6068:37;;6125:10;-1:-1:-1;;;;;6119:16:0;:2;-1:-1:-1;;;;;6119:16:0;;;6111:62;;;;-1:-1:-1;;;;;6111:62:0;;;;;;;;;;;;;;;;;6287:19;6295:10;6287:7;:19::i;:::-;:63;;;;6310:40;6327:10;6339;6310:16;:40::i;:::-;6279:72;;;;;;6405:24;;;;:15;:24;;;;;;:37;;-1:-1:-1;;;;;;6405:37:0;6432:10;6405:37;;;6485:33;6421:7;;-1:-1:-1;;;;;6485:33:0;;;;;;;;;;;5936:587;;;:::o;2077:177::-;1055:6;;-1:-1:-1;;;;;1055:6:0;1041:10;:20;1033:53;;;;-1:-1:-1;;;;;1033:53:0;;;;;;;;;2132:7;:16;;;;;;-1:-1:-1;;;2132:16:0;-1:-1:-1;;2132:16:0;;;;;;;;;;2154:96;;2179:18;;2186:10;;2179:18;;;;;2154:96;;;2223:20;;2232:10;;2223:20;;;;;2154:96;2077:177;:::o;13291:88::-;13357:10;:17;13291:88;;:::o;7625:186::-;7727:39;7746:10;7758:7;7727:18;:39::i;:::-;7719:48;;;;;;7774:32;7788:4;7794:2;7798:7;7774:13;:32::i;:::-;7625:186;;;:::o;14323:116:1:-;14421:12;;;14431:1;14421:12;;;;;;;;14394:40;;14405:5;;14412:7;;14394:10;:40::i;:::-;14323:116;;:::o;1323:248:2:-;1382:25;;:::i;:::-;-1:-1:-1;1410:44:2;;;;;;;;;;;-1:-1:-1;;;;;1410:44:2;;;;;;;;;;1460:9;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;1460:25:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1460:25:2;;;;;;;;;;;;1491:22;;;:13;:22;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;1536:30;;1410:44;;;;;1536:30;;;1323:248;;;:::o;1635:96:0:-;1690:4;1709:6;-1:-1:-1;;;;;1709:17:0;;;:6;;:17;;1635:96::o;12963:186::-;13055:7;13088:16;13098:5;13088:9;:16::i;:::-;13080:5;:24;13072:33;;;;;;-1:-1:-1;;;;;13118:19:0;;;;;;:12;:19;;;;;:26;;13138:5;;13118:26;;;;;;;;;;;;;;13111:33;;12963:186;;;;;:::o;21474:152::-;21543:4;1055:6;;-1:-1:-1;;;;;1055:6:0;1041:10;:20;1033:53;;;;-1:-1:-1;;;;;1033:53:0;;;;;;;;;21555:18;21561:2;21565:7;21555:5;:18::i;:::-;21579:25;;-1:-1:-1;;;;;21579:25:0;;:4;;:16;;:25;;21596:7;;21579:25;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21579:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;21617:4:0;;21474:152;-1:-1:-1;;;;;;21474:152:0:o;7815:142::-;7913:39;7930:4;7936:2;7940:7;7913:39;;;;;;;;;;;;:16;:39::i;22680:354:7:-;22823:16;;;22837:1;22823:16;;;22792:28;22823:16;;;;;22776:6;;22792:28;;22823:16;22837:1;22823:16;;;;;105:10:-1;22823:16:7;88:34:-1;136:17;;-1:-1;;22792:47:7;-1:-1:-1;22851:9:7;22846:83;22870:12;22866:1;:16;22846:83;;;22914:5;22920:1;22914:8;;;;;;;;;;;22897:11;22909:1;22897:14;;;;;;;;;;;;;;;;;:25;22884:3;;22846:83;;;;22938:26;22945:11;22958:5;22938:6;:26::i;:::-;22934:96;;22986:4;22979:11;;;;;22934:96;23018:5;23011:12;;;;;13702:138:0;13760:7;13791:13;:11;:13::i;:::-;13783:5;:21;13775:30;;;;;;13818:10;13829:5;13818:17;;;;;;;;;;;;;;;;13811:24;;13702:138;;;:::o;1791:311:2:-;1885:8;;1895:10;1891:1;1164:21;;;:13;1885:8;1164:21;;;;:27;:36;;;1156:70;;;;-1:-1:-1;;;;;1156:70:2;;;;;;;;;1915:11;1929:22;1938:5;1945;1929:8;:22::i;:::-;1915:36;;1965:6;1957:38;;;;-1:-1:-1;;;;;1957:38:2;;;;;;;;;2010:8;;2001:30;;-1:-1:-1;;;;;2001:30:2;;:4;;:8;;:30;;2010:8;2020:10;;2001:30;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2001:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2001:30:2;;;;2037:35;2042:10;2054:17;:7;:15;:17::i;2037:35::-;;2078:19;:7;:17;:19::i;:::-;1232:1;1791:311;;;;:::o;5711:152:0:-;5766:7;5838:20;;;:11;:20;;;;;;-1:-1:-1;;;;;5838:20:0;;5711:152::o;5436:271::-;-1:-1:-1;;;;;5567:24:0;;5491:7;5567:24;;;:17;:24;;;;;:34;;:32;:34::i;1735:72::-;1775:7;1796:6;-1:-1:-1;;;;;1796:6:0;1735:72;:::o;6962:199::-;-1:-1:-1;;;;;7037:16:0;;7043:10;7037:16;;7029:25;;;;;;7079:10;7060:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;7060:34:0;;;;;;;;;;;:45;;-1:-1:-1;;7060:45:0;;;;;;;7116:40;;7060:34;;7079:10;7116:40;;;;7060:45;;7116:40;;;;;;;;;;6962:199;;:::o;7961:221::-;8083:31;8096:4;8102:2;8106:7;8083:12;:31::i;:::-;8128:48;8151:4;8157:2;8161:7;8170:5;8128:22;:48::i;:::-;8120:57;;;;;;7961:221;;;;:::o;20479:154::-;20540:16;20548:7;20540;:16::i;:::-;20532:25;;;;;;20595:13;20585:43;;;;;;;;-1:-1:-1;;20585:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20595:13;;20585:43;;20595:13;20585:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20610:17;20619:7;20610:8;:17::i;:::-;20585:9;:43::i;:::-;20563:19;;;;:10;:19;;;;;;;;:65;;;;:19;;:65;;;;;;:::i;19880:141::-;19938:13;19967:16;19975:7;19967;:16::i;:::-;19959:25;;;;;;19997:19;;;;:10;:19;;;;;;;;;19990:26;;;;;;-1:-1:-1;;19990:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19997:19;;19990:26;;19997:19;19990:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19880:141;;;:::o;7468:153::-;-1:-1:-1;;;;;7581:25:0;;;7560:4;7581:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7468:153::o;1346:285::-;1055:6;;-1:-1:-1;;;;;1055:6:0;1041:10;:20;1033:53;;;;-1:-1:-1;;;;;1033:53:0;;;;;;;;;-1:-1:-1;;;;;1552:22:0;;1544:59;;;;-1:-1:-1;;;;;1544:59:0;;;;;;;;;1609:6;:17;;-1:-1:-1;;;;;;1609:17:0;-1:-1:-1;;;;;1609:17:0;;;;;;;;;;1346:285::o;8850:262::-;8947:4;8961:13;8977:16;8985:7;8977;:16::i;:::-;8961:32;;9018:5;-1:-1:-1;;;;;9007:16:0;:7;-1:-1:-1;;;;;9007:16:0;;:57;;;;9057:7;-1:-1:-1;;;;;9033:31:0;:20;9045:7;9033:11;:20::i;:::-;-1:-1:-1;;;;;9033:31:0;;9007:57;:99;;;;9074:32;9091:5;9098:7;9074:16;:32::i;:::-;8999:108;8850:262;-1:-1:-1;;;;8850:262:0:o;14199:241::-;14296:38;14316:4;14322:2;14326:7;14296:19;:38::i;:::-;14341:47;14374:4;14380:7;14341:32;:47::i;:::-;14395:40;14423:2;14427:7;14395:27;:40::i;14681:182::-;14740:24;14752:2;14756:7;14740:11;:24::i;:::-;14771:40;14799:2;14803:7;14771:27;:40::i;:::-;14818;14850:7;14818:31;:40::i;21730:946:7:-;21825:7;21871:77;21954:22;;:::i;:::-;21979:14;:12;:14::i;:::-;21954:39;;22027:2;:12;;;:19;22007:5;:12;22022:1;22007:16;:39;21999:48;;;;;;22096:27;;:::i;:::-;-1:-1:-1;22126:21:7;;;;;;;;;-1:-1:-1;22126:21:7;;;;;;;;;22153:208;22177:5;:12;22173:1;:16;22153:208;;;22223:18;22212:5;22218:1;22212:8;;;;;;;;;;;;;;:29;22204:38;;;;;;22257:97;22283:4;22297:49;22316:2;:12;;;22329:1;22333;22329:5;22316:19;;;;;;;;;;;;;;22337:5;22343:1;22337:8;;;;;;;;;;;;;;22297:18;:49::i;:::-;22257:16;:97::i;:::-;22250:104;-1:-1:-1;22191:3:7;;22153:208;;;;22373:39;22390:4;22396:2;:12;;;22409:1;22396:15;;;;;;;;;;;;;;22373:16;:39::i;:::-;22366:46;;22430:212;22460:5;:7;;;22477:5;:7;;;22494:20;22509:4;22494:14;:20::i;:::-;22524:2;:8;;;22542:23;22557:5;:7;;;22542:14;:23::i;:::-;22575:8;;;;22608;;22593:24;;:14;:24::i;:::-;22627:2;:7;;;22430:20;:212::i;:::-;22418:239;;22656:1;22649:8;;;;;;;22418:239;-1:-1:-1;22670:1:7;;21730:946;-1:-1:-1;;;;;21730:946:7:o;1065:112:3:-;1156:14;;1065:112::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;11059:353:0:-;11192:4;11209:15;:2;-1:-1:-1;;;;;11209:13:0;;:15::i;:::-;11204:48;;-1:-1:-1;11241:4:0;11234:11;;11204:48;11274:92;;-1:-1:-1;;;;;11274:92:0;;11258:13;;-1:-1:-1;;;;;11274:36:0;;;;;:92;;11290:2;;11328:4;;11340:7;;11355:5;;11274:92;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11274:92:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11274:92:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11274:92:0;;;;;;;;;-1:-1:-1;;;;;;11380:26:0;-1:-1:-1;;;;;11380:26:0;;-1:-1:-1;;11059:353:0;;;;;;:::o;8364:142::-;8421:4;8449:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8449:20:0;8482:19;;;8364:142::o;42385:419:1:-;42450:27;42491:7;42487:38;;-1:-1:-1;42508:10:1;;;;;;;;;;;;-1:-1:-1;;;;;42508:10:1;;;;;;42487:38;42542:2;42530:9;42567:50;42574:6;;42567:50;;42590:5;;42608:2;42603:7;;;;42567:50;;;42622:17;42652:3;42642:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;42642:14:1;87:34:-1;135:17;;-1:-1;42642:14:1;-1:-1:-1;42622:34:1;-1:-1:-1;;;42674:7:1;;42687:88;42694:7;;42687:88;;42747:2;42742;:7;42736:2;:14;42723:29;;42711:4;42716:3;;;;;;;42711:9;;;;;;;;;;;:41;-1:-1:-1;;;;;42711:41:1;;;;;;;;-1:-1:-1;42766:2:1;42760:8;;;;42687:88;;;-1:-1:-1;42794:4:1;42385:419;-1:-1:-1;;;;42385:419:1:o;39040:174::-;39130:33;39180:29;39190:2;39194;39180:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39173:36;39040:174;-1:-1:-1;;;39040:174:1:o;9913:638:0:-;10092:16;10100:7;10092;:16::i;:::-;-1:-1:-1;;;;;10084:24:0;:4;-1:-1:-1;;;;;10084:24:0;;10076:61;;;;-1:-1:-1;;;;;10076:61:0;;;;;;;;;-1:-1:-1;;;;;10215:16:0;;10207:54;;;;-1:-1:-1;;;;;10207:54:0;;;;;;;;;10302:24;;;;:15;:24;;;;;;;;10295:31;;-1:-1:-1;;;;;;10295:31:0;;;-1:-1:-1;;;;;10402:23:0;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10443:21:0;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10538:7;10534:2;-1:-1:-1;;;;;10519:27:0;10528:4;-1:-1:-1;;;;;10519:27:0;;;;;;;;;;;9913:638;;;:::o;16575:1070::-;-1:-1:-1;;;;;16856:18:0;;16831:22;16856:18;;;:12;:18;;;;;:25;:32;;16886:1;16856:32;:29;:32;:::i;:::-;16894:18;16915:26;;;:17;:26;;;;;;16831:57;;-1:-1:-1;17037:28:0;;;17033:301;;-1:-1:-1;;;;;17097:18:0;;17075:19;17097:18;;;:12;:18;;;;;:34;;17116:14;;17097:34;;;;;;;;;;;;;;17075:56;;17173:11;17140:12;:18;17153:4;-1:-1:-1;;;;;17140:18:0;-1:-1:-1;;;;;17140:18:0;;;;;;;;;;;;17159:10;17140:30;;;;;;;;;;;;;;;;;;;:44;;;;17250:30;;;:17;:30;;;;;:43;;;17033:301;-1:-1:-1;;;;;17412:18:0;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;17412:27:0;;;:::i;15469:173::-;-1:-1:-1;;;;;15578:16:0;;;;;;;:12;:16;;;;;;;;:23;;15549:26;;;:17;:26;;;;;:52;;;15607:16;;;39:1:-1;23:18;;45:23;;15607:30:0;;;;;;;;15469:173::o;9263:457::-;9417:16;9425:7;9417;:16::i;:::-;9416:17;:37;;;;-1:-1:-1;;;;;;9437:16:0;;;;9416:37;9401:94;;;;-1:-1:-1;;;;;9401:94:0;;;;;;;;;9575:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;9575:25:0;-1:-1:-1;;;;;9575:25:0;;;;;;;;9606:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9682;;9707:7;;-1:-1:-1;;;;;9682:33:0;;;9699:1;;9682:33;;9699:1;;9682:33;9263:457;;:::o;15827:151::-;15926:10;:17;;15899:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;15949:24:0;;;;;;;15827:151::o;19171:2555:7:-;19218:22;;:::i;:::-;19259:219;;;;;;;;19299:66;19259:219;;19398:66;19259:219;;;;;;;;19248:230;;;19494:473;;;;;;;;19546:66;19494:473;;;;;;19651:66;19494:473;;;;;;;;;;;;;;;;;;19772:66;19494:473;;19877:66;19494:473;;;;-1:-1:-1;;;19494:473:7;19484:7;;;:483;;;;19984:473;;;;;;;20036:66;19984:473;;;;;;20141:66;19984:473;;;;;;;;;;;;;20262:66;19984:473;;20367:66;19984:473;;;;-1:-1:-1;;;19984:473:7;19973:8;;;:484;20474:473;;;;;;;20526:66;20474:473;;;;;;20631:66;20474:473;;;;;;;;;;;;;20752:66;20474:473;;20857:66;20474:473;;;;-1:-1:-1;;;20474:473:7;20463:8;;;:484;;;;20968:24;;20990:1;20968:24;;;;;;;;;20990:1;20968:24;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;20953:12:7;;;:39;;;21016:219;;;;;;;;;21056:66;21016:219;;21155:66;21016:219;;;;20998:12;;:15;;-1:-1:-1;;20998:15:7;;;;;;;;;:237;;;;21259:219;;;;;;;;21299:66;21259:219;;;;21398:66;21259:219;;;21241:2;:12;;;21254:1;21241:15;;;;;;;;;;;;;:237;;;;21502:219;;;;;;;;21542:66;21502:219;;;;21641:66;21502:219;;;21484:2;:12;;;21497:1;21484:15;;;;;;;;;;;;;:237;;;;19171:2555;:::o;15876:441::-;15960:16;;:::i;:::-;15986:23;;:::i;:::-;16026:3;;16015:14;;:8;16046:3;;;;16035:8;;;:14;16055:8;;;:12;;;-1:-1:-1;16167:4:7;16164:1;16158:4;16015:14;16148:1;16141:4;16134:5;16130:16;16119:53;16108:64;-1:-1:-1;16108:64:7;16251:34;;;;16230:55;;16251:34;16268:9;16230:55;;16304:7;16296:16;;;;;;15876:441;;;;;;:::o;14903:474::-;14994:16;;:::i;:::-;15020:23;;:::i;:::-;15060:4;;15049:15;;:8;15081:4;;;;15070:8;;;:15;15102:4;;15091:8;;;:15;15123:4;;;15112:8;;;;:15;;;;-1:-1:-1;;15224:1:7;15218:4;15049:15;15208:1;15201:4;15194:5;15190:16;15179:53;15168:64;-1:-1:-1;15168:64:7;15311:34;;;;15290:55;;14542:313;14599:14;;:::i;:::-;14768:3;;14681:77;;14768:8;:20;;;;-1:-1:-1;14780:3:7;;;;:8;14768:20;14764:46;;;-1:-1:-1;;14797:13:7;;;;;;;;;-1:-1:-1;14797:13:7;;;;;;;14790:20;;14764:46;14823:27;;;;;;;;14831:1;:3;;;14823:27;;;;14847:1;14841;:3;;;:7;;;;;;14836:13;;;14823:27;;;14816:34;14542:313;-1:-1:-1;;14542:313:7:o;18375:488::-;18642:16;;;18656:1;18642:16;;;;;;;;;18608:4;;18620:19;;18642:16;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;18686:16:7;;;18700:1;18686:16;;;;;;;;;18620:38;;-1:-1:-1;18664:19:7;;18686:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18664:38;;18716:2;18708;18711:1;18708:5;;;;;;;;;;;;;:10;;;;18732:2;18724;18727:1;18724:5;;;;;;;;;;;;;:10;;;;18748:2;18740;18743:1;18740:5;;;;;;;;;;;;;:10;;;;18764:2;18756;18759:1;18756:5;;;;;;;;;;;;;:10;;;;18780:2;18772;18775:1;18772:5;;;;;;;;;;;;;:10;;;;18796:2;18788;18791:1;18788:5;;;;;;;;;;;;;:10;;;;18812:2;18804;18807:1;18804:5;;;;;;;;;;;;;:10;;;;18828:2;18820;18823:1;18820:5;;;;;;;;;;;;;:10;;;;18843:15;18851:2;18855;18843:7;:15::i;:::-;18836:22;18375:488;-1:-1:-1;;;;;;;;;;;18375:488:7:o;686:610:6:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:6;;;1238:51;-1:-1:-1;;686:610:6:o;39636:950:1:-;39792:33;39833:16;39858:2;39833:28;;39867:16;39892:2;39867:28;;39901:16;39926:2;39901:28;;39935:16;39960:2;39935:28;;39969:16;39994:2;39969:28;;40003:19;40095:3;:10;40082:3;:10;40069:3;:10;40056:3;:10;40043:3;:10;:23;:36;:49;:62;40025:86;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;40025:86:1;87:34:-1;135:17;;-1:-1;40025:86:1;-1:-1:-1;40003:108:1;-1:-1:-1;40003:108:1;40157:9;;40195:68;40211:3;:10;40207:1;:14;40195:68;;;40250:3;40254:1;40250:6;;;;;;;;;;;;;;;;40236;40243:3;;;;;;40236:11;;;;;;;;;;;:20;-1:-1:-1;;;;;40236:20:1;;;;;;;;-1:-1:-1;40223:3:1;;40195:68;;;-1:-1:-1;40277:1:1;40268:68;40284:3;:10;40280:1;:14;40268:68;;;40323:3;40327:1;40323:6;;;;;;;;;;;;;;;;40309;40316:3;;;;;;40309:11;;;;;;;;;;;:20;-1:-1:-1;;;;;40309:20:1;;;;;;;;-1:-1:-1;40296:3:1;;40268:68;;;-1:-1:-1;40350:1:1;40341:68;40357:3;:10;40353:1;:14;40341:68;;;40396:3;40400:1;40396:6;;;;;;;;;;;;;;;;40382;40389:3;;;;;;40382:11;;;;;;;;;;;:20;-1:-1:-1;;;;;40382:20:1;;;;;;;;-1:-1:-1;40369:3:1;;40341:68;;;-1:-1:-1;40423:1:1;40414:68;40430:3;:10;40426:1;:14;40414:68;;;40469:3;40473:1;40469:6;;;;;;;;;;;;;;;;40455;40462:3;;;;;;40455:11;;;;;;;;;;;:20;-1:-1:-1;;;;;40455:20:1;;;;;;;;-1:-1:-1;40442:3:1;;40414:68;;;-1:-1:-1;40496:1:1;40487:68;40503:3;:10;40499:1;:14;40487:68;;;40542:3;40546:1;40542:6;;;;;;;;;;;;;;;;40528;40535:3;;;;;;40528:11;;;;;;;;;;;:20;-1:-1:-1;;;;;40528:20:1;;;;;;;;-1:-1:-1;40515:3:1;;40487:68;;;-1:-1:-1;40574:6:1;;39636:950;-1:-1:-1;;;;;;;;;;;;;39636:950:1:o;1367:108:3:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1274:134:4:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;16519:919:7:-;16613:4;16648:2;:9;16635:2;:9;:22;16627:31;;;;;;16683:9;;16761:24;;;16729:1;16718:12;;16761:24;;;;;;;;;;;;;16736:22;;16718:12;16761:24;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;16761:24:7;-1:-1:-1;16736:49:7;-1:-1:-1;16796:9:7;16791:262;16815:8;16811:1;:12;16791:262;;;16857:2;16860:1;16857:5;;;;;;;;;;;;;;:7;;;16838:5;16844:1;16848;16844:5;16852:1;16844:9;16838:16;;;;;;;;;;;;;:26;;;;;16891:2;16894:1;16891:5;;;;;;;;;;;;;;:7;;;16872:5;16878:1;16882;16878:5;16886:1;16878:9;16872:16;;;;;;;;;;;;;:26;;;;;16925:2;16928:1;16925:5;;;;;;;;;;;;;;;;;;:7;16933:1;16925:10;;;;16906:5;16912:1;16916;16912:5;16920:1;16912:9;16906:16;;;;;;;;;;;;;:29;;;;;16962:2;16965:1;16962:5;;;;;;;;;;;;;;;;;;:7;:10;16943:16;;:5;;16957:1;16953;16949:5;;:9;;16943:16;;;;;;;;;;;:29;;;;;16999:2;17002:1;16999:5;;;;;;;;;;;;;;:7;;;17007:1;16999:10;;;;;;;;;;;16980:5;16986:1;16990;16986:5;16994:1;16986:9;16980:16;;;;;;;;;;;;;:29;;;;;17036:2;17039:1;17036:5;;;;;;;;;;;;;;:7;;;17044:1;17036:10;;;;;;;;;;;17017:5;17023:1;17027;17023:5;17031:1;17023:9;17017:16;;;;;;;;;;;;;;;;;:29;16825:3;;16791:262;;;;17058:21;;:::i;:::-;17085:12;17257:4;17244:3;17229:4;17218:9;17214:20;17199:4;17192:5;17188:16;17177:1;17162:4;17155:5;17151:16;17131:138;17120:149;-1:-1:-1;17120:149:7;17348:34;;;;17327:55;17401:7;17393:16;;;;;;-1:-1:-1;17422:6:7;:11;;;;-1:-1:-1;;;;;;16519:919:7:o;1732:187:4:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;;;1837:29:4;;;;;;;;;;-1:-1:-1;;;1888:5:4;;;1732:187::o;521:1583:2:-;;;;;;;;;;-1:-1:-1;521:1583:2;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;521:1583:2;;;-1:-1:-1;521:1583:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;521:1583:2;;;-1:-1:-1;;521:1583:2:o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;521:1583:2;;;-1:-1:-1;;521:1583:2:o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;521:1583:2;;;-1:-1:-1;;521:1583:2:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;521:1583:2;;;-1:-1:-1;;521:1583:2:o;5:118:-1:-;;72:46;110:6;97:20;72:46;;149:607;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;302:3;320:74;335:58;386:6;335:58;;;320:74;;;311:83;;411:5;470:6;517:3;509:4;501:6;497:17;492:3;488:27;485:36;482:2;;;534:1;531;524:12;482:2;559:1;544:206;569:6;566:1;563:13;544:206;;;627:3;649:37;682:3;670:10;649:37;;;637:50;;-1:-1;710:4;701:14;;;;729;;;;;591:1;584:9;544:206;;;548:14;220:536;;;;;;;;783:615;;898:3;891:4;883:6;879:17;875:27;865:2;;916:1;913;906:12;865:2;940:3;958:78;973:62;1028:6;973:62;;958:78;949:87;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1279:50;;-1:-1;1352:4;1343:14;;;;1371;;;;;1233:1;1226:9;1186:206;;1406:112;;1470:43;1505:6;1492:20;1470:43;;1525:118;;1592:46;1630:6;1617:20;1592:46;;1650:116;;1716:45;1753:6;1740:20;1716:45;;1773:120;;1850:38;1880:6;1874:13;1850:38;;1901:440;;2002:3;1995:4;1987:6;1983:17;1979:27;1969:2;;2020:1;2017;2010:12;1969:2;2057:6;2044:20;2079:64;2094:48;2135:6;2094:48;;2079:64;2070:73;;2163:6;2156:5;2149:21;2199:4;2191:6;2187:17;2232:4;2225:5;2221:16;2267:3;2258:6;2253:3;2249:16;2246:25;2243:2;;;2284:1;2281;2274:12;2243:2;2294:41;2328:6;2323:3;2318;2294:41;;;1962:379;;;;;;;;2829:456;;2939:4;2927:9;2922:3;2918:19;2914:30;2911:2;;;2957:1;2954;2947:12;2911:2;2975:20;2990:4;2975:20;;;2966:29;-1:-1;3042:1;3073:49;3118:3;3098:9;3073:49;;;3049:74;;-1:-1;3181:2;3214:49;3259:3;3235:22;;;3214:49;;;3207:4;3200:5;3196:16;3189:75;3144:131;2905:380;;;;;3321:494;;3431:4;3419:9;3414:3;3410:19;3406:30;3403:2;;;3449:1;3446;3439:12;3403:2;3467:20;3482:4;3467:20;;;3458:29;-1:-1;3534:1;3565:68;3629:3;3609:9;3565:68;;;3541:93;;-1:-1;3692:2;3725:68;3789:3;3765:22;;;3725:68;;3850:664;;3962:5;3950:9;3945:3;3941:19;3937:31;3934:2;;;3981:1;3978;3971:12;3934:2;3999:20;4014:4;3999:20;;;3990:29;-1:-1;4066:1;4097:70;4163:3;4143:9;4097:70;;;4073:95;;-1:-1;4226:2;4259:70;4325:3;4301:22;;;4259:70;;;4252:4;4245:5;4241:16;4234:96;4189:152;4388:3;4422:70;4488:3;4479:6;4468:9;4464:22;4422:70;;;4415:4;4408:5;4404:16;4397:96;4351:153;3928:586;;;;;4646:241;;4750:2;4738:9;4729:7;4725:23;4721:32;4718:2;;;4766:1;4763;4756:12;4718:2;4801:1;4818:53;4863:7;4843:9;4818:53;;4894:366;;;5015:2;5003:9;4994:7;4990:23;4986:32;4983:2;;;5031:1;5028;5021:12;4983:2;5066:1;5083:53;5128:7;5108:9;5083:53;;;5073:63;;5045:97;5173:2;5191:53;5236:7;5227:6;5216:9;5212:22;5191:53;;;5181:63;;5152:98;4977:283;;;;;;5267:491;;;;5405:2;5393:9;5384:7;5380:23;5376:32;5373:2;;;5421:1;5418;5411:12;5373:2;5456:1;5473:53;5518:7;5498:9;5473:53;;;5463:63;;5435:97;5563:2;5581:53;5626:7;5617:6;5606:9;5602:22;5581:53;;;5571:63;;5542:98;5671:2;5689:53;5734:7;5725:6;5714:9;5710:22;5689:53;;;5679:63;;5650:98;5367:391;;;;;;5765:721;;;;;5929:3;5917:9;5908:7;5904:23;5900:33;5897:2;;;5946:1;5943;5936:12;5897:2;5981:1;5998:53;6043:7;6023:9;5998:53;;;5988:63;;5960:97;6088:2;6106:53;6151:7;6142:6;6131:9;6127:22;6106:53;;;6096:63;;6067:98;6196:2;6214:53;6259:7;6250:6;6239:9;6235:22;6214:53;;;6204:63;;6175:98;6332:2;6321:9;6317:18;6304:32;6356:18;6348:6;6345:30;6342:2;;;6388:1;6385;6378:12;6342:2;6408:62;6462:7;6453:6;6442:9;6438:22;6408:62;;;6398:72;;6283:193;5891:595;;;;;;;;6493:360;;;6611:2;6599:9;6590:7;6586:23;6582:32;6579:2;;;6627:1;6624;6617:12;6579:2;6662:1;6679:53;6724:7;6704:9;6679:53;;;6669:63;;6641:97;6769:2;6787:50;6829:7;6820:6;6809:9;6805:22;6787:50;;6860:366;;;6981:2;6969:9;6960:7;6956:23;6952:32;6949:2;;;6997:1;6994;6987:12;6949:2;7032:1;7049:53;7094:7;7074:9;7049:53;;;7039:63;;7011:97;7139:2;7157:53;7202:7;7193:6;7182:9;7178:22;7157:53;;7233:235;;7334:2;7322:9;7313:7;7309:23;7305:32;7302:2;;;7350:1;7347;7340:12;7302:2;7385:1;7402:50;7444:7;7424:9;7402:50;;7475:472;;;7606:2;7594:9;7585:7;7581:23;7577:32;7574:2;;;7622:1;7619;7612:12;7574:2;7657:1;7674:53;7719:7;7699:9;7674:53;;;7664:63;;7636:97;7792:2;7781:9;7777:18;7764:32;7816:18;7808:6;7805:30;7802:2;;;7848:1;7845;7838:12;7802:2;7868:63;7923:7;7914:6;7903:9;7899:22;7868:63;;7954:701;;;;8111:2;8099:9;8090:7;8086:23;8082:32;8079:2;;;8127:1;8124;8117:12;8079:2;8162:1;8179:53;8224:7;8204:9;8179:53;;;8169:63;;8141:97;8297:2;8286:9;8282:18;8269:32;8321:18;8313:6;8310:30;8307:2;;;8353:1;8350;8343:12;8307:2;8373:63;8428:7;8419:6;8408:9;8404:22;8373:63;;;8363:73;;8248:194;8501:2;8490:9;8486:18;8473:32;8525:18;8517:6;8514:30;8511:2;;;8557:1;8554;8547:12;8511:2;8577:62;8631:7;8622:6;8611:9;8607:22;8577:62;;8662:239;;8765:2;8753:9;8744:7;8740:23;8736:32;8733:2;;;8781:1;8778;8771:12;8733:2;8816:1;8833:52;8877:7;8857:9;8833:52;;8908:261;;9022:2;9010:9;9001:7;8997:23;8993:32;8990:2;;;9038:1;9035;9028:12;8990:2;9073:1;9090:63;9145:7;9125:9;9090:63;;9176:460;;;9343:3;9331:9;9322:7;9318:23;9314:33;9311:2;;;9360:1;9357;9350:12;9311:2;9395:1;9412:76;9480:7;9460:9;9412:76;;;9402:86;;9374:120;9525:3;9544:76;9612:7;9603:6;9592:9;9588:22;9544:76;;9643:241;;9747:2;9735:9;9726:7;9722:23;9718:32;9715:2;;;9763:1;9760;9753:12;9715:2;9798:1;9815:53;9860:7;9840:9;9815:53;;9891:366;;;10012:2;10000:9;9991:7;9987:23;9983:32;9980:2;;;10028:1;10025;10018:12;9980:2;10063:1;10080:53;10125:7;10105:9;10080:53;;10264:142;10355:45;10394:5;10355:45;;;10350:3;10343:58;10337:69;;;10413:120;10496:31;10521:5;10496:31;;10540:111;10617:28;10639:5;10617:28;;10658:343;;10768:38;10800:5;10768:38;;;10818:70;10881:6;10876:3;10818:70;;;10811:77;;10893:52;10938:6;10933:3;10926:4;10919:5;10915:16;10893:52;;;10966:29;10988:6;10966:29;;;10957:39;;;;10748:253;-1:-1;;;10748:253;11363:364;;11523:67;11587:2;11582:3;11523:67;;;11623:66;11603:87;;11718:2;11709:12;;11509:218;-1:-1;;11509:218;11736:364;;11896:67;11960:2;11955:3;11896:67;;;11996:66;11976:87;;12091:2;12082:12;;11882:218;-1:-1;;11882:218;12109:364;;12269:67;12333:2;12328:3;12269:67;;;12369:66;12349:87;;12464:2;12455:12;;12255:218;-1:-1;;12255:218;12482:364;;12642:67;12706:2;12701:3;12642:67;;;12742:66;12722:87;;12837:2;12828:12;;12628:218;-1:-1;;12628:218;12855:364;;13015:67;13079:2;13074:3;13015:67;;;13115:66;13095:87;;13210:2;13201:12;;13001:218;-1:-1;;13001:218;13228:364;;13388:67;13452:2;13447:3;13388:67;;;13488:66;13468:87;;13583:2;13574:12;;13374:218;-1:-1;;13374:218;13601:465;;13761:67;13825:2;13820:3;13761:67;;;13861:66;13841:87;;-1:-1;;;;;13957:2;13948:12;;13941:88;14057:2;14048:12;;13747:319;-1:-1;;13747:319;14075:364;;14235:67;14299:2;14294:3;14235:67;;;14335:66;14315:87;;14430:2;14421:12;;14221:218;-1:-1;;14221:218;14447:120;14530:31;14555:5;14530:31;;14574:213;14692:2;14677:18;;14706:71;14681:9;14750:6;14706:71;;14794:631;15014:3;14999:19;;15029:71;15003:9;15073:6;15029:71;;;15111:72;15179:2;15168:9;15164:18;15155:6;15111:72;;;15194;15262:2;15251:9;15247:18;15238:6;15194:72;;;15314:9;15308:4;15304:20;15299:2;15288:9;15284:18;15277:48;15339:76;15410:4;15401:6;15339:76;;;15331:84;14985:440;-1:-1;;;;;;14985:440;15432:201;15544:2;15529:18;;15558:65;15533:9;15596:6;15558:65;;15640:301;15778:2;15792:47;;;15763:18;;15853:78;15763:18;15917:6;15853:78;;15948:407;16139:2;16153:47;;;16124:18;;16214:131;16124:18;16214:131;;16362:407;16553:2;16567:47;;;16538:18;;16628:131;16538:18;16628:131;;16776:407;16967:2;16981:47;;;16952:18;;17042:131;16952:18;17042:131;;17190:407;17381:2;17395:47;;;17366:18;;17456:131;17366:18;17456:131;;17604:407;17795:2;17809:47;;;17780:18;;17870:131;17780:18;17870:131;;18018:407;18209:2;18223:47;;;18194:18;;18284:131;18194:18;18284:131;;18432:407;18623:2;18637:47;;;18608:18;;18698:131;18608:18;18698:131;;18846:407;19037:2;19051:47;;;19022:18;;19112:131;19022:18;19112:131;;19260:213;19378:2;19363:18;;19392:71;19367:9;19436:6;19392:71;;19480:340;19634:2;19619:18;;19648:71;19623:9;19692:6;19648:71;;;19730:80;19806:2;19795:9;19791:18;19782:6;19730:80;;19827:256;19889:2;19883:9;19915:17;;;19990:18;19975:34;;20011:22;;;19972:62;19969:2;;;20047:1;20044;20037:12;19969:2;20063;20056:22;19867:216;;-1:-1;19867:216;20090:229;;20243:18;20235:6;20232:30;20229:2;;;20275:1;20272;20265:12;20229:2;-1:-1;20304:4;20292:17;;20166:153;20566:258;;20709:18;20701:6;20698:30;20695:2;;;20741:1;20738;20731:12;20695:2;-1:-1;20814:4;20785;20762:17;;;;-1:-1;;20758:33;20804:15;;20632:192;21097:91;21171:12;;21155:33;21295:162;21397:19;;;21446:4;21437:14;;21390:67;21637:105;;21706:31;21731:5;21706:31;;21749:92;21822:13;21815:21;;21798:43;21848:128;-1:-1;;;;;21917:54;;21900:76;22366:151;-1:-1;;;;;;22434:78;;22417:100;22745:129;;22832:37;22863:5;22881:121;22960:37;22991:5;22960:37;;23132:145;23213:6;23208:3;23203;23190:30;-1:-1;23269:1;23251:16;;23244:27;23183:94;23286:268;23351:1;23358:101;23372:6;23369:1;23366:13;23358:101;;;23439:11;;;23433:18;23420:11;;;23413:39;23394:2;23387:10;23358:101;;;23474:6;23471:1;23468:13;23465:2;;;-1:-1;;23539:1;23521:16;;23514:27;23335:219;23562:97;23650:2;23630:14;-1:-1;;23626:28;;23610:49",
    "sourcePath": "/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "compiler": {
        "name": "solc",
        "version": "0.5.6+commit.b259423e"
    },
    "ast": {
        "absolutePath": "/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
        "exportedSymbols": {
            "SolnSquareVerifier": [
                7497
            ]
        },
        "id": 7498,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 7363,
                "literals": [
                    "solidity",
                    "^",
                    "0.5",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "73:23:2"
            },
            {
                "id": 7364,
                "literals": [
                    "experimental",
                    "ABIEncoderV2"
                ],
                "nodeType": "PragmaDirective",
                "src": "97:33:2"
            },
            {
                "absolutePath": "/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
                "file": "/home/bzzzpy/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
                "id": 7365,
                "nodeType": "ImportDirective",
                "scope": 7498,
                "sourceUnit": 7547,
                "src": "132:117:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
                "file": "./ERC721Mintable.sol",
                "id": 7366,
                "nodeType": "ImportDirective",
                "scope": 7498,
                "sourceUnit": 1093,
                "src": "250:30:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/bzzzpy/Documents/Blockchain-Capstone/verifier.sol",
                "file": "../../verifier.sol",
                "id": 7367,
                "nodeType": "ImportDirective",
                "scope": 7498,
                "sourceUnit": 10303,
                "src": "281:28:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 7368,
                            "name": "CustomERC721Token",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1092,
                            "src": "552:17:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CustomERC721Token_$1092",
                                "typeString": "contract CustomERC721Token"
                            }
                        },
                        "id": 7369,
                        "nodeType": "InheritanceSpecifier",
                        "src": "552:17:2"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 7370,
                            "name": "Verifier",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 10302,
                            "src": "571:8:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Verifier_$10302",
                                "typeString": "contract Verifier"
                            }
                        },
                        "id": 7371,
                        "nodeType": "InheritanceSpecifier",
                        "src": "571:8:2"
                    }
                ],
                "contractDependencies": [
                    7361,
                    672,
                    143,
                    1055,
                    1092,
                    77,
                    10302,
                    189,
                    970
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 7497,
                "linearizedBaseContracts": [
                    7497,
                    10302,
                    1092,
                    1055,
                    7361,
                    970,
                    672,
                    189,
                    143,
                    77
                ],
                "name": "SolnSquareVerifier",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 7374,
                        "libraryName": {
                            "contractScope": null,
                            "id": 7372,
                            "name": "Counters",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 7546,
                            "src": "590:8:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Counters_$7546",
                                "typeString": "library Counters"
                            }
                        },
                        "nodeType": "UsingForDirective",
                        "src": "584:36:2",
                        "typeName": {
                            "contractScope": null,
                            "id": 7373,
                            "name": "Counters.Counter",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 7506,
                            "src": "603:16:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$7506_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        }
                    },
                    {
                        "canonicalName": "SolnSquareVerifier.Solution",
                        "id": 7379,
                        "members": [
                            {
                                "constant": false,
                                "id": 7376,
                                "name": "index",
                                "nodeType": "VariableDeclaration",
                                "scope": 7379,
                                "src": "717:13:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 7375,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "717:7:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": null,
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 7378,
                                "name": "caller",
                                "nodeType": "VariableDeclaration",
                                "scope": 7379,
                                "src": "736:14:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 7377,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "736:7:2",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "value": null,
                                "visibility": "internal"
                            }
                        ],
                        "name": "Solution",
                        "nodeType": "StructDefinition",
                        "scope": 7497,
                        "src": "695:60:2",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 7381,
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 7497,
                        "src": "758:24:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$7506_storage",
                            "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                            "contractScope": null,
                            "id": 7380,
                            "name": "Counters.Counter",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 7506,
                            "src": "758:16:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$7506_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        },
                        "value": null,
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 7384,
                        "name": "solutions",
                        "nodeType": "VariableDeclaration",
                        "scope": 7497,
                        "src": "832:20:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7379_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution[]"
                        },
                        "typeName": {
                            "baseType": {
                                "contractScope": null,
                                "id": 7382,
                                "name": "Solution",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 7379,
                                "src": "832:8:2",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7379_storage_ptr",
                                    "typeString": "struct SolnSquareVerifier.Solution"
                                }
                            },
                            "id": 7383,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "832:10:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$7379_storage_$dyn_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution[]"
                            }
                        },
                        "value": null,
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 7388,
                        "name": "uniqSolutions",
                        "nodeType": "VariableDeclaration",
                        "scope": 7497,
                        "src": "919:42:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7379_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
                        },
                        "typeName": {
                            "id": 7387,
                            "keyType": {
                                "id": 7385,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "927:7:2",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "919:28:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7379_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
                            },
                            "valueType": {
                                "contractScope": null,
                                "id": 7386,
                                "name": "Solution",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 7379,
                                "src": "938:8:2",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7379_storage_ptr",
                                    "typeString": "struct SolnSquareVerifier.Solution"
                                }
                            }
                        },
                        "value": null,
                        "visibility": "internal"
                    },
                    {
                        "anonymous": false,
                        "documentation": null,
                        "id": 7394,
                        "name": "SolutionAdded",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 7393,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7390,
                                    "indexed": true,
                                    "name": "index",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7394,
                                    "src": "1044:21:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7389,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1044:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7392,
                                    "indexed": true,
                                    "name": "caller",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7394,
                                    "src": "1067:22:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7391,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1067:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1043:47:2"
                        },
                        "src": "1024:67:2"
                    },
                    {
                        "body": {
                            "id": 7411,
                            "nodeType": "Block",
                            "src": "1150:88:2",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 7406,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 7401,
                                                            "name": "uniqSolutions",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 7388,
                                                            "src": "1164:13:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7379_storage_$",
                                                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                                                            }
                                                        },
                                                        "id": 7403,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 7402,
                                                            "name": "caller",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 7398,
                                                            "src": "1178:6:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1164:21:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Solution_$7379_storage",
                                                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                                        }
                                                    },
                                                    "id": 7404,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "index",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7376,
                                                    "src": "1164:27:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "id": 7405,
                                                    "name": "input",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7396,
                                                    "src": "1195:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1164:36:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "736f6c7574696f6e206d75737420626520756e6971",
                                                "id": 7407,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1202:23:2",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1ec1964e0067b25f8c447e43c2c262a487694c4f3b7debc62c2b80730dbf5164",
                                                    "typeString": "literal_string \"solution must be uniq\""
                                                },
                                                "value": "solution must be uniq"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1ec1964e0067b25f8c447e43c2c262a487694c4f3b7debc62c2b80730dbf5164",
                                                    "typeString": "literal_string \"solution must be uniq\""
                                                }
                                            ],
                                            "id": 7400,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                10320,
                                                10321
                                            ],
                                            "referencedDeclaration": 10321,
                                            "src": "1156:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 7408,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1156:70:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7409,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1156:70:2"
                                },
                                {
                                    "id": 7410,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "1232:1:2"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 7412,
                        "name": "solutionIsUniq",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 7399,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7396,
                                    "name": "input",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7412,
                                    "src": "1119:13:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7395,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1119:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7398,
                                    "name": "caller",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7412,
                                    "src": "1134:14:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7397,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1134:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1118:31:2"
                        },
                        "src": "1095:143:2",
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 7443,
                            "nodeType": "Block",
                            "src": "1376:195:2",
                            "statements": [
                                {
                                    "assignments": [
                                        7420
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 7420,
                                            "name": "_solution",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 7443,
                                            "src": "1382:25:2",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Solution_$7379_memory_ptr",
                                                "typeString": "struct SolnSquareVerifier.Solution"
                                            },
                                            "typeName": {
                                                "contractScope": null,
                                                "id": 7419,
                                                "name": "Solution",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 7379,
                                                "src": "1382:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Solution_$7379_storage_ptr",
                                                    "typeString": "struct SolnSquareVerifier.Solution"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 7425,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7422,
                                                "name": "_index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7414,
                                                "src": "1428:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7423,
                                                "name": "_caller",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7416,
                                                "src": "1444:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 7421,
                                            "name": "Solution",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7379,
                                            "src": "1410:8:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_struct$_Solution_$7379_storage_ptr_$",
                                                "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                                            }
                                        },
                                        "id": 7424,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "names": [
                                            "index",
                                            "caller"
                                        ],
                                        "nodeType": "FunctionCall",
                                        "src": "1410:44:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Solution_$7379_memory",
                                            "typeString": "struct SolnSquareVerifier.Solution memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1382:72:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7429,
                                                "name": "_solution",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7420,
                                                "src": "1475:9:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Solution_$7379_memory_ptr",
                                                    "typeString": "struct SolnSquareVerifier.Solution memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_Solution_$7379_memory_ptr",
                                                    "typeString": "struct SolnSquareVerifier.Solution memory"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7426,
                                                "name": "solutions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7384,
                                                "src": "1460:9:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Solution_$7379_storage_$dyn_storage",
                                                    "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                                }
                                            },
                                            "id": 7428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "1460:14:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7379_storage_$returns$_t_uint256_$",
                                                "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                                            }
                                        },
                                        "id": 7430,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1460:25:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 7431,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1460:25:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 7436,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 7432,
                                                "name": "uniqSolutions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7388,
                                                "src": "1491:13:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7379_storage_$",
                                                    "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                                                }
                                            },
                                            "id": 7434,
                                            "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 7433,
                                                "name": "_caller",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7416,
                                                "src": "1505:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1491:22:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Solution_$7379_storage",
                                                "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 7435,
                                            "name": "_solution",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7420,
                                            "src": "1516:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Solution_$7379_memory_ptr",
                                                "typeString": "struct SolnSquareVerifier.Solution memory"
                                            }
                                        },
                                        "src": "1491:34:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Solution_$7379_storage",
                                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                        }
                                    },
                                    "id": 7437,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1491:34:2"
                                },
                                {
                                    "eventCall": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7439,
                                                "name": "_index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7414,
                                                "src": "1550:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7440,
                                                "name": "_caller",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7416,
                                                "src": "1558:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 7438,
                                            "name": "SolutionAdded",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7394,
                                            "src": "1536:13:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                                "typeString": "function (uint256,address)"
                                            }
                                        },
                                        "id": 7441,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1536:30:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7442,
                                    "nodeType": "EmitStatement",
                                    "src": "1531:35:2"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 7444,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "add",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7417,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7414,
                                    "name": "_index",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7444,
                                    "src": "1336:14:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7413,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1336:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7416,
                                    "name": "_caller",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7444,
                                    "src": "1352:15:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7415,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1352:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1335:33:2"
                        },
                        "returnParameters": {
                            "id": 7418,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1376:0:2"
                        },
                        "scope": 7497,
                        "src": "1323:248:2",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 7495,
                            "nodeType": "Block",
                            "src": "1909:193:2",
                            "statements": [
                                {
                                    "assignments": [
                                        7461
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 7461,
                                            "name": "_check",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 7495,
                                            "src": "1915:11:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 7460,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1915:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 7466,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7463,
                                                "name": "proof",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7446,
                                                "src": "1938:5:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Proof_$9976_memory_ptr",
                                                    "typeString": "struct Verifier.Proof memory"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7464,
                                                "name": "input",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7450,
                                                "src": "1945:5:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                                    "typeString": "uint256[2] memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_Proof_$9976_memory_ptr",
                                                    "typeString": "struct Verifier.Proof memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                                    "typeString": "uint256[2] memory"
                                                }
                                            ],
                                            "id": 7462,
                                            "name": "verifyTx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10301,
                                            "src": "1929:8:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Proof_$9976_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                                                "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view returns (bool)"
                                            }
                                        },
                                        "id": 7465,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1929:22:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1915:36:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7468,
                                                "name": "_check",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7461,
                                                "src": "1965:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "70726f6f66206d7573742062652076616c6964",
                                                "id": 7469,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1973:21:2",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7343b550aca1359fa12b84ae5f4188680f2e4cea4f77d4779048b5f50753b0f5",
                                                    "typeString": "literal_string \"proof must be valid\""
                                                },
                                                "value": "proof must be valid"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7343b550aca1359fa12b84ae5f4188680f2e4cea4f77d4779048b5f50753b0f5",
                                                    "typeString": "literal_string \"proof must be valid\""
                                                }
                                            ],
                                            "id": 7467,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                10320,
                                                10321
                                            ],
                                            "referencedDeclaration": 10321,
                                            "src": "1957:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 7470,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1957:38:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7471,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1957:38:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 7475,
                                                    "name": "input",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7450,
                                                    "src": "2010:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                                        "typeString": "uint256[2] memory"
                                                    }
                                                },
                                                "id": 7477,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 7476,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2016:1:2",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2010:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 7478,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10317,
                                                    "src": "2020:3:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 7479,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "2020:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7472,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10371,
                                                "src": "2001:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_SolnSquareVerifier_$7497",
                                                    "typeString": "contract SolnSquareVerifier"
                                                }
                                            },
                                            "id": 7474,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7444,
                                            "src": "2001:8:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                                "typeString": "function (uint256,address) external"
                                            }
                                        },
                                        "id": 7480,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2001:30:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7481,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2001:30:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 7483,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10317,
                                                    "src": "2042:3:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 7484,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "2042:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 7485,
                                                        "name": "tokenId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7381,
                                                        "src": "2054:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Counter_$7506_storage",
                                                            "typeString": "struct Counters.Counter storage ref"
                                                        }
                                                    },
                                                    "id": 7486,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "current",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 7517,
                                                    "src": "2054:15:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$7506_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$7506_storage_ptr_$",
                                                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                                    }
                                                },
                                                "id": 7487,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2054:17:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 7482,
                                            "name": "mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1091,
                                            "src": "2037:4:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 7488,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2037:35:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 7489,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2037:35:2"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7490,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7381,
                                                "src": "2078:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Counter_$7506_storage",
                                                    "typeString": "struct Counters.Counter storage ref"
                                                }
                                            },
                                            "id": 7492,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "increment",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7529,
                                            "src": "2078:17:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$7506_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$7506_storage_ptr_$",
                                                "typeString": "function (struct Counters.Counter storage pointer)"
                                            }
                                        },
                                        "id": 7493,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2078:19:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7494,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2078:19:2"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 7496,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 7453,
                                            "name": "input",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7450,
                                            "src": "1885:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                                "typeString": "uint256[2] memory"
                                            }
                                        },
                                        "id": 7455,
                                        "indexExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 7454,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1891:1:2",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1885:8:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "argumentTypes": null,
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 7456,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10317,
                                            "src": "1895:3:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 7457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1895:10:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    }
                                ],
                                "id": 7458,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 7452,
                                    "name": "solutionIsUniq",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7412,
                                    "src": "1870:14:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$_t_uint256_$_t_address_$",
                                        "typeString": "modifier (uint256,address)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1870:36:2"
                            }
                        ],
                        "name": "mintToken",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7451,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7446,
                                    "name": "proof",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7496,
                                    "src": "1810:18:2",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proof_$9976_memory_ptr",
                                        "typeString": "struct Verifier.Proof"
                                    },
                                    "typeName": {
                                        "contractScope": null,
                                        "id": 7445,
                                        "name": "Proof",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 9976,
                                        "src": "1810:5:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proof_$9976_storage_ptr",
                                            "typeString": "struct Verifier.Proof"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7450,
                                    "name": "input",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7496,
                                    "src": "1830:23:2",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                        "typeString": "uint256[2]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 7447,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1830:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 7449,
                                        "length": {
                                            "argumentTypes": null,
                                            "hexValue": "32",
                                            "id": 7448,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1838:1:2",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                        },
                                        "nodeType": "ArrayTypeName",
                                        "src": "1830:10:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                                            "typeString": "uint256[2]"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1809:45:2"
                        },
                        "returnParameters": {
                            "id": 7459,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1909:0:2"
                        },
                        "scope": 7497,
                        "src": "1791:311:2",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 7498,
                "src": "521:1583:2"
            }
        ],
        "src": "73:2031:2"
    },
    "functionHashes": {
        "__callback(bytes32,string)": "27dc297e",
        "__callback(bytes32,string,bytes)": "38bbfa50",
        "add(uint256,address)": "2b8bbbe8",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "getOwner()": "893d20e8",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isOwner(address)": "2f54bf6e",
        "mint(address,uint256)": "40c10f19",
        "mintToken(((uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256)),uint256[2])": "534f7527",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setPaused(bool)": "16c38b3c",
        "setTokenURI(uint256)": "bff26126",
        "supportsInterface(bytes4)": "01ffc9a7",
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "tokenURI(uint256)": "c87b56dd",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "verifyTx(((uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256)),uint256[2])": "43cd76fc"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2166600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "__callback(bytes32,string)": "infinite",
            "__callback(bytes32,string,bytes)": "infinite",
            "add(uint256,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "infinite",
            "getApproved(uint256)": "infinite",
            "getOwner()": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "isOwner(address)": "infinite",
            "mint(address,uint256)": "infinite",
            "mintToken(((uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256)),uint256[2])": "infinite",
            "ownerOf(uint256)": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "setPaused(bool)": "22079",
            "setTokenURI(uint256)": "infinite",
            "supportsInterface(bytes4)": "811",
            "tokenByIndex(uint256)": "infinite",
            "tokenOfOwnerByIndex(address,uint256)": "infinite",
            "tokenURI(uint256)": "infinite",
            "totalSupply()": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite",
            "verifyTx(((uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256)),uint256[2])": "infinite"
        }
    }
}