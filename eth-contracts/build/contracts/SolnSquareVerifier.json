{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "index",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"index\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x63662bb2d923548cf20f653f6ff5410a5d1ae8ddaa2a47ce0899c2b3dbeebbae\",\"urls\":[\"bzzr://722f54c8a70fb06b3f738296720d21830577b76c73aae61999284bbce0795925\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xa7096ec98db4672e3df6bea596de1ab0b69eb293ce3ff75d117c9762faaebb8c\",\"urls\":[\"bzzr://98a563c6fa5d85ef51818652e67ca022f7538c3f945044be7f43dbe3afcbb493\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xc5765f8ee45271e154d9339bf3210d6ba9286344403df806e88b2c5dba0628a8\",\"urls\":[\"bzzr://973b565a713cdb836986be6eb696cb5ee2886b0d38f6059e048e254957e097bf\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x3d23261c33c6776b4e3ac1b1b8bdfd6eb99624cd90d29323c03db120db8ba70f\",\"urls\":[\"bzzr://67576db0ff74b52a39c2ef25ca4ab5d7eaca54f961be004b7797b51d744eb5ab\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "326:1780:6:-;;;19225:276:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:10;582:6;;:19;;;;;;;;;;;;;;;;;;2080:5;2070:7;;:15;;;;;;;;;;;;;;;;;;2965:40;2593:10;2984:20;;2965:18;;;:40;;:::i;:::-;5092;4956:10;5111:20;;5092:18;;;:40;;:::i;:::-;12253:51;11887:10;12272:31;;12253:18;;;:51;;:::i;:::-;19381:4;19373:5;:12;;;;;;;;;;;;:::i;:::-;;19401:6;19391:7;:16;;;;;;;;;;;;:::i;:::-;;19429:12;19413:13;:28;;;;;;;;;;;;:::i;:::-;;19447:49;19050:10;19466:29;;19447:18;;;:49;;:::i;:::-;19225:276;;;326:1780:6;;3291:148:4;3377:10;3362:25;;:11;:25;;;;;3354:34;;;;;;3430:4;3394:20;:33;3415:11;3394:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3291:148;:::o;326:1780:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "326:1780:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:1780:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3093:127:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19580:77;;;:::i;:::-;;;;;;;;;;;;;;;;6232:157;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5641:587;;;;;;;;;;;;;;;;:::i;:::-;;1782:177;;;;;;;;;;;;;;;;:::i;:::-;;12996:88;;;:::i;:::-;;;;;;;;;;;;;;;;7330:186;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;1338:96:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12668:186;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;21488:152:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7520:142;;;;;;;;;;;;;;;;:::i;:::-;;24117:400:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13407:138:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1798:305:6;;;;;;;;;;;;;;;;:::i;:::-;;5416:152:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5141:271;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1438:74;;;:::i;:::-;;;;;;;;;;;;;;;;19721:81;;;:::i;:::-;;;;;;;;;;;;;;;;6667:199;;;;;;;;;;;;;;;;:::i;:::-;;7666:221;;;;;;;;;;;;;;;;:::i;:::-;;20485:154;;;;;;;;;;;;;;;;:::i;:::-;;1279:299:6;;;;;;;;;;;;;;;;:::i;:::-;;19886:141:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7173:153;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1049:285;;;;;;;;;;;;;;;;:::i;:::-;;3093:127;3163:4;3182:20;:33;3203:11;3182:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:40;;3093:127;;;:::o;19580:77::-;19619:13;19647:5;19640:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19580:77;:::o;6232:157::-;6291:7;6360:15;:24;6376:7;6360:24;;;;;;;;;;;;;;;;;;;;;6353:31;;6232:157;;;:::o;5641:587::-;5773:18;5794:16;5802:7;5794;:16::i;:::-;5773:37;;5830:10;5824:16;;:2;:16;;;;5816:62;;;;;;;;;;;;;;;;;;;;;;5992:19;6000:10;5992:7;:19::i;:::-;:63;;;;6015:40;6032:10;6044;6015:16;:40::i;:::-;5992:63;5984:72;;;;;;6137:10;6110:15;:24;6126:7;6110:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6215:7;6211:2;6190:33;;6199:10;6190:33;;;;;;;;;;;;5641:587;;;:::o;1782:177::-;758:6;;;;;;;;;;;744:20;;:10;:20;;;736:53;;;;;;;;;;;;;;;;;;;;;;1847:6;1837:7;;:16;;;;;;;;;;;;;;;;;;1863:6;1859:96;;;1891:10;1884:18;;;;;;;;;;;;1859:96;;;1937:10;1928:20;;;;;;;;;;;;1859:96;1782:177;:::o;12996:88::-;13040:7;13062:10;:17;;;;13055:24;;12996:88;:::o;7330:186::-;7432:39;7451:10;7463:7;7432:18;:39::i;:::-;7424:48;;;;;;7479:32;7493:4;7499:2;7503:7;7479:13;:32::i;:::-;7330:186;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;1338:96:4:-;1393:4;1422:7;1412:17;;:6;;;;;;;;;;;:17;;;1405:24;;1338:96;;;:::o;12668:186::-;12760:7;12793:16;12803:5;12793:9;:16::i;:::-;12785:5;:24;12777:33;;;;;;12823:12;:19;12836:5;12823:19;;;;;;;;;;;;;;;12843:5;12823:26;;;;;;;;;;;;;;;;12816:33;;12668:186;;;;:::o;14929:166:5:-;;;;:::o;21488:152:4:-;21557:4;758:6;;;;;;;;;;;744:20;;:10;:20;;;736:53;;;;;;;;;;;;;;;;;;;;;;21569:18;21575:2;21579:7;21569:5;:18::i;:::-;21593:4;:16;;;21610:7;21593:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21593:25:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21593:25:4;;;;21631:4;21624:11;;21488:152;;;;:::o;7520:142::-;7618:39;7635:4;7641:2;7645:7;7618:39;;;;;;;;;;;;:16;:39::i;:::-;7520:142;;;:::o;24117:400:7:-;24220:6;24238:25;24277:1;24266:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24266:13:7;;;;24238:41;;24302:6;24311:1;24302:10;;24298:88;24318:12;24314:1;:16;24298:88;;;24367:5;24373:1;24367:8;;;;;;;;;;;24350:11;24362:1;24350:14;;;;;;;;;;;;;:25;;;;;24332:3;;;;;;;24298:88;;;;24429:1;24399:26;24406:11;24419:5;24399:6;:26::i;:::-;:31;24395:116;;;24453:4;24446:11;;;;;24395:116;24495:5;24488:12;;;24117:400;;;;;:::o;13407:138:4:-;13465:7;13496:13;:11;:13::i;:::-;13488:5;:21;13480:30;;;;;;13523:10;13534:5;13523:17;;;;;;;;;;;;;;;;13516:24;;13407:138;;;:::o;1798:305:6:-;1893:5;1900:10;1141:5;1130:17;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1130:17:6;;;1120:28;;;;;;1089:13;:21;1103:6;1089:21;;;;;;;;;;;;;;;:27;;;:59;;1074:108;;;;;;;;;;;;;;;;;;;;;;1920:10;1933:23;1942:5;1949:6;1933:8;:23::i;:::-;1920:36;;1970:5;1962:37;;;;;;;;;;;;;;;;;;;;;;2005:4;:8;;;2014:5;2021:10;2005:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:27:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2005:27:6;;;;2038:19;:7;:17;:19::i;:::-;2063:35;2068:10;2080:17;:7;:15;:17::i;:::-;2063:4;:35::i;:::-;;1188:1;1798:305;;;;:::o;5416:152:4:-;5471:7;5543:11;:20;5555:7;5543:20;;;;;;;;;;;;;;;;;;;;;5536:27;;5416:152;;;:::o;5141:271::-;5196:7;5272:34;:17;:24;5290:5;5272:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5265:41;;5141:271;;;:::o;1438:74::-;1479:7;1501:6;;;;;;;;;;;1494:13;;1438:74;:::o;19721:81::-;19762:13;19790:7;19783:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19721:81;:::o;6667:199::-;6748:10;6742:16;;:2;:16;;;;6734:25;;;;;;6802:8;6765:18;:30;6784:10;6765:30;;;;;;;;;;;;;;;:34;6796:2;6765:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6848:2;6821:40;;6836:10;6821:40;;;6852:8;6821:40;;;;;;;;;;;;;;;6667:199;;:::o;7666:221::-;7788:31;7801:4;7807:2;7811:7;7788:12;:31::i;:::-;7833:48;7856:4;7862:2;7866:7;7875:5;7833:22;:48::i;:::-;7825:57;;;;;;7666:221;;;;:::o;20485:154::-;20546:16;20554:7;20546;:16::i;:::-;20538:25;;;;;;20591:43;20601:13;20591:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20616:17;20625:7;20616:8;:17::i;:::-;20591:9;:43::i;:::-;20569:10;:19;20580:7;20569:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;20485:154;:::o;1279:299:6:-;1341:14;1379:5;1368:17;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1368:17:6;;;1358:28;;;;;;1341:45;;1392:25;;:::i;:::-;1420:43;;;;;;;;1438:6;1420:43;;;;1454:6;1420:43;;;;;1392:71;;1469:9;1484;1469:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1469:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:9;1500:13;:21;1514:6;1500:21;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:6;1544:29;;1558:6;1544:29;;;;;;;;;;1279:299;;;;:::o;19886:141:4:-;19944:13;19973:16;19981:7;19973;:16::i;:::-;19965:25;;;;;;20003:10;:19;20014:7;20003:19;;;;;;;;;;;19996:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19886:141;;;:::o;7173:153::-;7265:4;7286:18;:25;7305:5;7286:25;;;;;;;;;;;;;;;:35;7312:8;7286:35;;;;;;;;;;;;;;;;;;;;;;;;;7279:42;;7173:153;;;;:::o;1049:285::-;758:6;;;;;;;;;;;744:20;;:10;:20;;;736:53;;;;;;;;;;;;;;;;;;;;;;1275:1;1255:22;;:8;:22;;;;1247:59;;;;;;;;;;;;;;;;;;;;;;1321:8;1312:6;;:17;;;;;;;;;;;;;;;;;;1049:285;:::o;8555:262::-;8652:4;8666:13;8682:16;8690:7;8682;:16::i;:::-;8666:32;;8723:5;8712:16;;:7;:16;;;:57;;;;8762:7;8738:31;;:20;8750:7;8738:11;:20::i;:::-;:31;;;8712:57;:99;;;;8779:32;8796:5;8803:7;8779:16;:32::i;:::-;8712:99;8704:108;;;8555:262;;;;:::o;13904:241::-;14001:38;14021:4;14027:2;14031:7;14001:19;:38::i;:::-;14046:47;14079:4;14085:7;14046:32;:47::i;:::-;14100:40;14128:2;14132:7;14100:27;:40::i;:::-;13904:241;;;:::o;14386:182::-;14445:24;14457:2;14461:7;14445:11;:24::i;:::-;14476:40;14504:2;14508:7;14476:27;:40::i;:::-;14523;14555:7;14523:31;:40::i;:::-;14386:182;;:::o;23191:921:7:-;23271:4;23287:26;23316:77;23287:106;;23403:22;;:::i;:::-;23428:14;:12;:14::i;:::-;23403:39;;23480:2;:12;;;:19;23475:1;23460:5;:12;:16;:39;23452:48;;;;;;23557:27;;:::i;:::-;23587:21;;;;;;;;23603:1;23587:21;;;;23606:1;23587:21;;;23557:51;;23623:6;23632:1;23623:10;;23618:197;23639:5;:12;23635:1;:16;23618:197;;;23691:18;23680:5;23686:1;23680:8;;;;;;;;;;;;;;:29;23672:38;;;;;;23731:73;23748:4;23754:49;23773:2;:12;;;23790:1;23786;:5;23773:19;;;;;;;;;;;;;;23794:5;23800:1;23794:8;;;;;;;;;;;;;;23754:18;:49::i;:::-;23731:16;:73::i;:::-;23724:80;;23653:3;;;;;;;23618:197;;;;23831:39;23848:4;23854:2;:12;;;23867:1;23854:15;;;;;;;;;;;;;;23831:16;:39::i;:::-;23824:46;;23884:193;23919:5;:7;;;23928:5;:7;;;23950:20;23965:4;23950:14;:20::i;:::-;23972:2;:8;;;23995:23;24010:5;:7;;;23995:14;:23::i;:::-;24020:2;:8;;;24043:24;24058:2;:8;;;24043:14;:24::i;:::-;24069:2;:7;;;23884:20;:193::i;:::-;23880:207;;24086:1;24079:8;;;;;;;23880:207;24104:1;24097:8;;;;;23191:921;;;;;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1065:112::-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;10764:353:4:-;10897:4;10914:15;:2;:13;;;:15::i;:::-;10909:48;;10946:4;10939:11;;;;10909:48;10963:13;10995:2;10979:36;;;11023:2;11033:4;11045:7;11060:5;10979:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10979:92:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10979:92:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10979:92:4;;;;;;;;;10963:108;;4118:10;11095:16;;11085:26;;;:6;:26;;;;11077:35;;;10764:353;;;;;;;:::o;8069:142::-;8126:4;8138:13;8154:11;:20;8166:7;8154:20;;;;;;;;;;;;;;;;;;;;;8138:36;;8204:1;8187:19;;:5;:19;;;;8180:26;;;8069:142;;;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;9618:638:4:-;9797:16;9805:7;9797;:16::i;:::-;9789:24;;:4;:24;;;9781:61;;;;;;;;;;;;;;;;;;;;;;9934:1;9920:16;;:2;:16;;;;9912:54;;;;;;;;;;;;;;;;;;;;;;10007:15;:24;10023:7;10007:24;;;;;;;;;;;;10000:31;;;;;;;;;;;10107:35;:17;:23;10125:4;10107:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10148:33;:17;:21;10166:2;10148:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10243:7;10239:2;10224:27;;10233:4;10224:27;;;;;;;;;;;;9618:638;;;:::o;16280:1070::-;16536:22;16561:32;16591:1;16561:12;:18;16574:4;16561:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;16536:57;;16599:18;16620:17;:26;16638:7;16620:26;;;;;;;;;;;;16599:47;;16756:14;16742:10;:28;16738:301;;16780:19;16802:12;:18;16815:4;16802:18;;;;;;;;;;;;;;;16821:14;16802:34;;;;;;;;;;;;;;;;16780:56;;16878:11;16845:12;:18;16858:4;16845:18;;;;;;;;;;;;;;;16864:10;16845:30;;;;;;;;;;;;;;;:44;;;;16988:10;16955:17;:30;16973:11;16955:30;;;;;;;;;;;:43;;;;16738:301;;17117:12;:18;17130:4;17117:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16280:1070;;;;:::o;15174:173::-;15283:12;:16;15296:2;15283:16;;;;;;;;;;;;;;;:23;;;;15254:17;:26;15272:7;15254:26;;;;;;;;;;;:52;;;;15312:12;:16;15325:2;15312:16;;;;;;;;;;;;;;;15334:7;15312:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15312:30:4;;;;;;;;;;;;;;;;;;;;;;15174:173;;:::o;8968:457::-;9122:16;9130:7;9122;:16::i;:::-;9121:17;:37;;;;;9156:1;9142:16;;:2;:16;;;;9121:37;9106:94;;;;;;;;;;;;;;;;;;;;;;9303:2;9280:11;:20;9292:7;9280:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9311:33;:17;:21;9329:2;9311:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9412:7;9408:2;9387:33;;9404:1;9387:33;;;;;;;;;;;;8968:457;;:::o;15532:151::-;15631:10;:17;;;;15604:15;:24;15620:7;15604:24;;;;;;;;;;;:44;;;;15654:10;15670:7;15654:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15654:24:4;;;;;;;;;;;;;;;;;;;;;;15532:151;:::o;21235:1951:7:-;21282:22;;:::i;:::-;21327:169;;;;;;;;21351:66;21327:169;;;;21428:66;21327:169;;;21316:2;:8;;:180;;;;21516:327;;;;;;;;;;;;;;;;21541:66;21516:327;;;;21618:66;21516:327;;;;;;;;;;;;;;;21697:66;21516:327;;;;21774:66;21516:327;;;;;;21506:2;:7;;:337;;;;21864:327;;;;;;;;;;;;;;;;21889:66;21864:327;;;;21966:66;21864:327;;;;;;;;;;;;;;;22045:66;21864:327;;;;22122:66;21864:327;;;;;;21853:2;:8;;:338;;;;22212:327;;;;;;;;;;;;;;;;22237:66;22212:327;;;;22314:66;22212:327;;;;;;;;;;;;;;;22393:66;22212:327;;;;22470:66;22212:327;;;;;;22201:2;:8;;:338;;;;22586:1;22564:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22549:2;:12;;:39;;;;22616:169;;;;;;;;22640:66;22616:169;;;;22717:66;22616:169;;;22598:2;:12;;;22611:1;22598:15;;;;;;;;;;;;;:187;;;;22813:169;;;;;;;;22837:66;22813:169;;;;22914:66;22813:169;;;22795:2;:12;;;22808:1;22795:15;;;;;;;;;;;;;:187;;;;23010:169;;;;;;;;23034:66;23010:169;;;;23111:66;23010:169;;;22992:2;:12;;;23005:1;22992:15;;;;;;;;;;;;;:187;;;;21235:1951;:::o;17736:454::-;17805:16;;:::i;:::-;17833:20;;:::i;:::-;17874:1;:3;;;17863:5;17869:1;17863:8;;;;;;;;;;:14;;;;;17898:1;:3;;;17887:5;17893:1;17887:8;;;;;;;;;;:14;;;;;17922:1;17911:5;17917:1;17911:8;;;;;;;;;;:12;;;;;17933;18037:4;18034:1;18028:4;18021:5;18018:1;18011:4;18004:5;18000:16;17989:53;17978:64;;18119:7;18132:1;18127:20;;;;18112:35;;18127:20;18136:9;18112:35;;18175:7;18166:17;;;;;;17736:454;;;;;;:::o;16805:493::-;16884:16;;:::i;:::-;16912:20;;:::i;:::-;16953:2;:4;;;16942:5;16948:1;16942:8;;;;;;;;;;:15;;;;;16978:2;:4;;;16967:5;16973:1;16967:8;;;;;;;;;;:15;;;;;17003:2;:4;;;16992:5;16998:1;16992:8;;;;;;;;;;:15;;;;;17028:2;:4;;;17017:5;17023:1;17017:8;;;;;;;;;;:15;;;;;17042:12;17146:4;17143:1;17137:4;17130:5;17127:1;17120:4;17113:5;17109:16;17098:53;17087:64;;17228:7;17241:1;17236:20;;;;17221:35;;17236:20;17245:9;17221:35;;17283:7;17275:16;;;;;;16805:493;;;;;;:::o;16414:340::-;16471:14;;:::i;:::-;16549:6;16558:77;16549:86;;16656:1;16649;:3;;;:8;:20;;;;;16668:1;16661;:3;;;:8;16649:20;16645:58;;;16690:13;;;;;;;;16698:1;16690:13;;;;16701:1;16690:13;;;16683:20;;;;;16645:58;16720:27;;;;;;;;16728:1;:3;;;16720:27;;;;16744:1;16738;:3;;;:7;;;;;;16733:1;:13;16720:27;;;16713:34;;;16414:340;;;;:::o;20332:552::-;20583:4;20599:19;20635:1;20621:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20599:38;;20647:19;20683:1;20669:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20647:38;;20703:2;20695;20698:1;20695:5;;;;;;;;;;;;;:10;;;;20723:2;20715;20718:1;20715:5;;;;;;;;;;;;;:10;;;;20743:2;20735;20738:1;20735:5;;;;;;;;;;;;;:10;;;;20763:2;20755;20758:1;20755:5;;;;;;;;;;;;;:10;;;;20783:2;20775;20778:1;20775:5;;;;;;;;;;;;;:10;;;;20803:2;20795;20798:1;20795:5;;;;;;;;;;;;;:10;;;;20823:2;20815;20818:1;20815:5;;;;;;;;;;;;;:10;;;;20843:2;20835;20838:1;20835:5;;;;;;;;;;;;;:10;;;;20862:15;20870:2;20874;20862:7;:15::i;:::-;20855:22;;;;20332:552;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;18401:923:7:-;18483:4;18520:2;:9;18507:2;:9;:22;18499:31;;;;;;18540:13;18556:2;:9;18540:25;;18575:14;18603:1;18592:8;:12;18575:29;;18614:19;18647:9;18636:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18636:21:7;;;;18614:43;;18672:6;18681:1;18672:10;;18667:307;18688:8;18684:1;:12;18667:307;;;18744:2;18747:1;18744:5;;;;;;;;;;;;;;:7;;;18725:5;18739:1;18735;18731;:5;:9;18725:16;;;;;;;;;;;;;:26;;;;;18784:2;18787:1;18784:5;;;;;;;;;;;;;;:7;;;18765:5;18779:1;18775;18771;:5;:9;18765:16;;;;;;;;;;;;;:26;;;;;18824:2;18827:1;18824:5;;;;;;;;;;;;;;:7;;;18832:1;18824:10;;;;;;;;;;;18805:5;18819:1;18815;18811;:5;:9;18805:16;;;;;;;;;;;;;:29;;;;;18867:2;18870:1;18867:5;;;;;;;;;;;;;;:7;;;18875:1;18867:10;;;;;;;;;;;18848:5;18862:1;18858;18854;:5;:9;18848:16;;;;;;;;;;;;;:29;;;;;18910:2;18913:1;18910:5;;;;;;;;;;;;;;:7;;;18918:1;18910:10;;;;;;;;;;;18891:5;18905:1;18901;18897;:5;:9;18891:16;;;;;;;;;;;;;:29;;;;;18953:2;18956:1;18953:5;;;;;;;;;;;;;;:7;;;18961:1;18953:10;;;;;;;;;;;18934:5;18948:1;18944;18940;:5;:9;18934:16;;;;;;;;;;;;;:29;;;;;18698:3;;;;;;;18667:307;;;;18983:18;;:::i;:::-;19011:12;19144:4;19139:3;19132:4;19121:9;19117:20;19110:4;19103:5;19099:16;19096:1;19089:4;19082:5;19078:16;19067:82;19056:93;;19226:7;19239:1;19234:20;;;;19219:35;;19234:20;19243:9;19219:35;;19281:7;19273:16;;;;;;19316:1;19306:3;19310:1;19306:6;;;;;;;;;;;:11;;19299:18;;;;;;;18401:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;326:1780:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:1780:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:1780:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:1780:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:1780:6;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:607;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;302:3;320:74;335:58;386:6;335:58;;;320:74;;;311:83;;411:5;470:6;517:3;509:4;501:6;497:17;492:3;488:27;485:36;482:2;;;534:1;531;524:12;482:2;559:1;544:206;569:6;566:1;563:13;544:206;;;627:3;649:37;682:3;670:10;649:37;;;644:3;637:50;710:4;705:3;701:14;694:21;;738:4;733:3;729:14;722:21;;601:149;591:1;588;584:9;579:14;;544:206;;;548:14;220:536;;;;;;;;783:615;;898:3;891:4;883:6;879:17;875:27;865:2;;916:1;913;906:12;865:2;940:3;958:78;973:62;1028:6;973:62;;;958:78;;;949:87;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1286:3;1279:50;1352:4;1347:3;1343:14;1336:21;;1380:4;1375:3;1371:14;1364:21;;1243:149;1233:1;1230;1226:9;1221:14;;1186:206;;;1190:14;858:540;;;;;;;;1406:112;;1470:43;1505:6;1492:20;1470:43;;;1461:52;;1455:63;;;;;1525:118;;1592:46;1630:6;1617:20;1592:46;;;1583:55;;1577:66;;;;;1650:116;;1716:45;1753:6;1740:20;1716:45;;;1707:54;;1701:65;;;;;1773:120;;1850:38;1880:6;1874:13;1850:38;;;1841:47;;1835:58;;;;;1901:440;;2002:3;1995:4;1987:6;1983:17;1979:27;1969:2;;2020:1;2017;2010:12;1969:2;2057:6;2044:20;2079:64;2094:48;2135:6;2094:48;;;2079:64;;;2070:73;;2163:6;2156:5;2149:21;2199:4;2191:6;2187:17;2232:4;2225:5;2221:16;2267:3;2258:6;2253:3;2249:16;2246:25;2243:2;;;2284:1;2281;2274:12;2243:2;2294:41;2328:6;2323:3;2318;2294:41;;;1962:379;;;;;;;;2350:442;;2452:3;2445:4;2437:6;2433:17;2429:27;2419:2;;2470:1;2467;2460:12;2419:2;2507:6;2494:20;2529:65;2544:49;2586:6;2544:49;;;2529:65;;;2520:74;;2614:6;2607:5;2600:21;2650:4;2642:6;2638:17;2683:4;2676:5;2672:16;2718:3;2709:6;2704:3;2700:16;2697:25;2694:2;;;2735:1;2732;2725:12;2694:2;2745:41;2779:6;2774:3;2769;2745:41;;;2412:380;;;;;;;;2829:456;;2939:4;2927:9;2922:3;2918:19;2914:30;2911:2;;;2957:1;2954;2947:12;2911:2;2975:20;2990:4;2975:20;;;2966:29;;3042:1;3073:49;3118:3;3109:6;3098:9;3094:22;3073:49;;;3067:3;3060:5;3056:15;3049:74;3005:129;3181:2;3214:49;3259:3;3250:6;3239:9;3235:22;3214:49;;;3207:4;3200:5;3196:16;3189:75;3144:131;2905:380;;;;;3321:494;;3431:4;3419:9;3414:3;3410:19;3406:30;3403:2;;;3449:1;3446;3439:12;3403:2;3467:20;3482:4;3467:20;;;3458:29;;3534:1;3565:68;3629:3;3620:6;3609:9;3605:22;3565:68;;;3559:3;3552:5;3548:15;3541:93;3497:148;3692:2;3725:68;3789:3;3780:6;3769:9;3765:22;3725:68;;;3718:4;3711:5;3707:16;3700:94;3655:150;3397:418;;;;;3850:665;;3963:5;3951:9;3946:3;3942:19;3938:31;3935:2;;;3982:1;3979;3972:12;3935:2;4000:20;4015:4;4000:20;;;3991:29;;4067:1;4098:70;4164:3;4155:6;4144:9;4140:22;4098:70;;;4092:3;4085:5;4081:15;4074:95;4030:150;4227:2;4260:70;4326:3;4317:6;4306:9;4302:22;4260:70;;;4253:4;4246:5;4242:16;4235:96;4190:152;4389:3;4423:70;4489:3;4480:6;4469:9;4465:22;4423:70;;;4416:4;4409:5;4405:16;4398:96;4352:153;3929:586;;;;;4522:118;;4589:46;4627:6;4614:20;4589:46;;;4580:55;;4574:66;;;;;4647:241;;4751:2;4739:9;4730:7;4726:23;4722:32;4719:2;;;4767:1;4764;4757:12;4719:2;4802:1;4819:53;4864:7;4855:6;4844:9;4840:22;4819:53;;;4809:63;;4781:97;4713:175;;;;;4895:366;;;5016:2;5004:9;4995:7;4991:23;4987:32;4984:2;;;5032:1;5029;5022:12;4984:2;5067:1;5084:53;5129:7;5120:6;5109:9;5105:22;5084:53;;;5074:63;;5046:97;5174:2;5192:53;5237:7;5228:6;5217:9;5213:22;5192:53;;;5182:63;;5153:98;4978:283;;;;;;5268:491;;;;5406:2;5394:9;5385:7;5381:23;5377:32;5374:2;;;5422:1;5419;5412:12;5374:2;5457:1;5474:53;5519:7;5510:6;5499:9;5495:22;5474:53;;;5464:63;;5436:97;5564:2;5582:53;5627:7;5618:6;5607:9;5603:22;5582:53;;;5572:63;;5543:98;5672:2;5690:53;5735:7;5726:6;5715:9;5711:22;5690:53;;;5680:63;;5651:98;5368:391;;;;;;5766:721;;;;;5930:3;5918:9;5909:7;5905:23;5901:33;5898:2;;;5947:1;5944;5937:12;5898:2;5982:1;5999:53;6044:7;6035:6;6024:9;6020:22;5999:53;;;5989:63;;5961:97;6089:2;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;;;6097:63;;6068:98;6197:2;6215:53;6260:7;6251:6;6240:9;6236:22;6215:53;;;6205:63;;6176:98;6333:2;6322:9;6318:18;6305:32;6357:18;6349:6;6346:30;6343:2;;;6389:1;6386;6379:12;6343:2;6409:62;6463:7;6454:6;6443:9;6439:22;6409:62;;;6399:72;;6284:193;5892:595;;;;;;;;6494:360;;;6612:2;6600:9;6591:7;6587:23;6583:32;6580:2;;;6628:1;6625;6618:12;6580:2;6663:1;6680:53;6725:7;6716:6;6705:9;6701:22;6680:53;;;6670:63;;6642:97;6770:2;6788:50;6830:7;6821:6;6810:9;6806:22;6788:50;;;6778:60;;6749:95;6574:280;;;;;;6861:366;;;6982:2;6970:9;6961:7;6957:23;6953:32;6950:2;;;6998:1;6995;6988:12;6950:2;7033:1;7050:53;7095:7;7086:6;7075:9;7071:22;7050:53;;;7040:63;;7012:97;7140:2;7158:53;7203:7;7194:6;7183:9;7179:22;7158:53;;;7148:63;;7119:98;6944:283;;;;;;7234:235;;7335:2;7323:9;7314:7;7310:23;7306:32;7303:2;;;7351:1;7348;7341:12;7303:2;7386:1;7403:50;7445:7;7436:6;7425:9;7421:22;7403:50;;;7393:60;;7365:94;7297:172;;;;;7476:472;;;7607:2;7595:9;7586:7;7582:23;7578:32;7575:2;;;7623:1;7620;7613:12;7575:2;7658:1;7675:53;7720:7;7711:6;7700:9;7696:22;7675:53;;;7665:63;;7637:97;7793:2;7782:9;7778:18;7765:32;7817:18;7809:6;7806:30;7803:2;;;7849:1;7846;7839:12;7803:2;7869:63;7924:7;7915:6;7904:9;7900:22;7869:63;;;7859:73;;7744:194;7569:379;;;;;;7955:701;;;;8112:2;8100:9;8091:7;8087:23;8083:32;8080:2;;;8128:1;8125;8118:12;8080:2;8163:1;8180:53;8225:7;8216:6;8205:9;8201:22;8180:53;;;8170:63;;8142:97;8298:2;8287:9;8283:18;8270:32;8322:18;8314:6;8311:30;8308:2;;;8354:1;8351;8344:12;8308:2;8374:63;8429:7;8420:6;8409:9;8405:22;8374:63;;;8364:73;;8249:194;8502:2;8491:9;8487:18;8474:32;8526:18;8518:6;8515:30;8512:2;;;8558:1;8555;8548:12;8512:2;8578:62;8632:7;8623:6;8612:9;8608:22;8578:62;;;8568:72;;8453:193;8074:582;;;;;;8663:239;;8766:2;8754:9;8745:7;8741:23;8737:32;8734:2;;;8782:1;8779;8772:12;8734:2;8817:1;8834:52;8878:7;8869:6;8858:9;8854:22;8834:52;;;8824:62;;8796:96;8728:174;;;;;8909:261;;9023:2;9011:9;9002:7;8998:23;8994:32;8991:2;;;9039:1;9036;9029:12;8991:2;9074:1;9091:63;9146:7;9137:6;9126:9;9122:22;9091:63;;;9081:73;;9053:107;8985:185;;;;;9177:416;;;9322:3;9310:9;9301:7;9297:23;9293:33;9290:2;;;9339:1;9336;9329:12;9290:2;9374:1;9391:77;9460:7;9451:6;9440:9;9436:22;9391:77;;;9381:87;;9353:121;9505:3;9524:53;9569:7;9560:6;9549:9;9545:22;9524:53;;;9514:63;;9484:99;9284:309;;;;;;9600:462;;;9768:3;9756:9;9747:7;9743:23;9739:33;9736:2;;;9785:1;9782;9775:12;9736:2;9820:1;9837:77;9906:7;9897:6;9886:9;9882:22;9837:77;;;9827:87;;9799:121;9951:3;9970:76;10038:7;10029:6;10018:9;10014:22;9970:76;;;9960:86;;9930:122;9730:332;;;;;;10069:241;;10173:2;10161:9;10152:7;10148:23;10144:32;10141:2;;;10189:1;10186;10179:12;10141:2;10224:1;10241:53;10286:7;10277:6;10266:9;10262:22;10241:53;;;10231:63;;10203:97;10135:175;;;;;10318:171;;10404:45;10445:3;10438:5;10404:45;;;10478:4;10473:3;10469:14;10455:28;;10397:92;;;;;10497:142;10588:45;10627:5;10588:45;;;10583:3;10576:58;10570:69;;;10646:120;10729:31;10754:5;10729:31;;;10724:3;10717:44;10711:55;;;10806:555;10925:48;10967:5;10925:48;;;10986:74;11053:6;11048:3;10986:74;;;10979:81;;11080:50;11124:5;11080:50;;;11151:1;11136:213;11161:6;11158:1;11155:13;11136:213;;;11208:63;11267:3;11258:6;11252:13;11208:63;;;11201:70;;11288:54;11335:6;11288:54;;;11278:64;;11183:1;11180;11176:9;11171:14;;11136:213;;;11140:14;10904:457;;;;;11369:111;11446:28;11468:5;11446:28;;;11441:3;11434:41;11428:52;;;11487:343;;11597:38;11629:5;11597:38;;;11647:70;11710:6;11705:3;11647:70;;;11640:77;;11722:52;11767:6;11762:3;11755:4;11748:5;11744:16;11722:52;;;11795:29;11817:6;11795:29;;;11790:3;11786:39;11779:46;;11577:253;;;;;;11837:347;;11949:39;11982:5;11949:39;;;12000:71;12064:6;12059:3;12000:71;;;11993:78;;12076:52;12121:6;12116:3;12109:4;12102:5;12098:16;12076:52;;;12149:29;12171:6;12149:29;;;12144:3;12140:39;12133:46;;11929:255;;;;;;12192:364;;12352:67;12416:2;12411:3;12352:67;;;12345:74;;12452:66;12448:1;12443:3;12439:11;12432:87;12547:2;12542:3;12538:12;12531:19;;12338:218;;;;12565:364;;12725:67;12789:2;12784:3;12725:67;;;12718:74;;12825:66;12821:1;12816:3;12812:11;12805:87;12920:2;12915:3;12911:12;12904:19;;12711:218;;;;12938:364;;13098:67;13162:2;13157:3;13098:67;;;13091:74;;13198:66;13194:1;13189:3;13185:11;13178:87;13293:2;13288:3;13284:12;13277:19;;13084:218;;;;13311:364;;13471:67;13535:2;13530:3;13471:67;;;13464:74;;13571:66;13567:1;13562:3;13558:11;13551:87;13666:2;13661:3;13657:12;13650:19;;13457:218;;;;13684:364;;13844:67;13908:2;13903:3;13844:67;;;13837:74;;13944:66;13940:1;13935:3;13931:11;13924:87;14039:2;14034:3;14030:12;14023:19;;13830:218;;;;14057:465;;14217:67;14281:2;14276:3;14217:67;;;14210:74;;14317:66;14313:1;14308:3;14304:11;14297:87;14418:66;14413:2;14408:3;14404:12;14397:88;14513:2;14508:3;14504:12;14497:19;;14203:319;;;;14531:364;;14691:67;14755:2;14750:3;14691:67;;;14684:74;;14791:66;14787:1;14782:3;14778:11;14771:87;14886:2;14881:3;14877:12;14870:19;;14677:218;;;;14904:364;;15064:67;15128:2;15123:3;15064:67;;;15057:74;;15164:66;15160:1;15155:3;15151:11;15144:87;15259:2;15254:3;15250:12;15243:19;;15050:218;;;;15331:450;15460:4;15455:3;15451:14;15539:3;15532:5;15528:15;15522:22;15550:61;15606:3;15601;15597:13;15584:11;15550:61;;;15480:137;15686:4;15679:5;15675:16;15669:23;15698:62;15754:4;15749:3;15745:14;15732:11;15698:62;;;15627:139;15433:348;;;;15843:534;15972:4;15967:3;15963:14;16051:3;16044:5;16040:15;16034:22;16062:103;16160:3;16155;16151:13;16138:11;16062:103;;;15992:179;16240:4;16233:5;16229:16;16223:23;16252:104;16350:4;16345:3;16341:14;16328:11;16252:104;;;16181:181;15945:432;;;;16437:750;16578:5;16573:3;16569:15;16658:3;16651:5;16647:15;16641:22;16669:107;16771:3;16766;16762:13;16749:11;16669:107;;;16599:183;16851:4;16844:5;16840:16;16834:23;16863:108;16965:4;16960:3;16956:14;16943:11;16863:108;;;16792:185;17046:4;17039:5;17035:16;17029:23;17058:108;17160:4;17155:3;17151:14;17138:11;17058:108;;;16987:185;16551:636;;;;17194:110;17267:31;17292:5;17267:31;;;17262:3;17255:44;17249:55;;;17311:120;17394:31;17419:5;17394:31;;;17389:3;17382:44;17376:55;;;17438:213;;17556:2;17545:9;17541:18;17533:26;;17570:71;17638:1;17627:9;17623:17;17614:6;17570:71;;;17527:124;;;;;17658:631;;17878:3;17867:9;17863:19;17855:27;;17893:71;17961:1;17950:9;17946:17;17937:6;17893:71;;;17975:72;18043:2;18032:9;18028:18;18019:6;17975:72;;;18058;18126:2;18115:9;18111:18;18102:6;18058:72;;;18178:9;18172:4;18168:20;18163:2;18152:9;18148:18;18141:48;18203:76;18274:4;18265:6;18203:76;;;18195:84;;17849:440;;;;;;;;18296:201;;18408:2;18397:9;18393:18;18385:26;;18422:65;18484:1;18473:9;18469:17;18460:6;18422:65;;;18379:118;;;;;18504:301;;18642:2;18631:9;18627:18;18619:26;;18692:9;18686:4;18682:20;18678:1;18667:9;18663:17;18656:47;18717:78;18790:4;18781:6;18717:78;;;18709:86;;18613:192;;;;;18812:407;;19003:2;18992:9;18988:18;18980:26;;19053:9;19047:4;19043:20;19039:1;19028:9;19024:17;19017:47;19078:131;19204:4;19078:131;;;19070:139;;18974:245;;;;19226:407;;19417:2;19406:9;19402:18;19394:26;;19467:9;19461:4;19457:20;19453:1;19442:9;19438:17;19431:47;19492:131;19618:4;19492:131;;;19484:139;;19388:245;;;;19640:407;;19831:2;19820:9;19816:18;19808:26;;19881:9;19875:4;19871:20;19867:1;19856:9;19852:17;19845:47;19906:131;20032:4;19906:131;;;19898:139;;19802:245;;;;20054:407;;20245:2;20234:9;20230:18;20222:26;;20295:9;20289:4;20285:20;20281:1;20270:9;20266:17;20259:47;20320:131;20446:4;20320:131;;;20312:139;;20216:245;;;;20468:407;;20659:2;20648:9;20644:18;20636:26;;20709:9;20703:4;20699:20;20695:1;20684:9;20680:17;20673:47;20734:131;20860:4;20734:131;;;20726:139;;20630:245;;;;20882:407;;21073:2;21062:9;21058:18;21050:26;;21123:9;21117:4;21113:20;21109:1;21098:9;21094:17;21087:47;21148:131;21274:4;21148:131;;;21140:139;;21044:245;;;;21296:407;;21487:2;21476:9;21472:18;21464:26;;21537:9;21531:4;21527:20;21523:1;21512:9;21508:17;21501:47;21562:131;21688:4;21562:131;;;21554:139;;21458:245;;;;21710:407;;21901:2;21890:9;21886:18;21878:26;;21951:9;21945:4;21941:20;21937:1;21926:9;21922:17;21915:47;21976:131;22102:4;21976:131;;;21968:139;;21872:245;;;;22124:310;;22290:3;22279:9;22275:19;22267:27;;22305:119;22421:1;22410:9;22406:17;22397:6;22305:119;;;22261:173;;;;;22441:438;;22643:3;22632:9;22628:19;22620:27;;22658:119;22774:1;22763:9;22759:17;22750:6;22658:119;;;22788:81;22864:3;22853:9;22849:19;22840:6;22788:81;;;22614:265;;;;;;22886:213;;23004:2;22993:9;22989:18;22981:26;;23018:71;23086:1;23075:9;23071:17;23062:6;23018:71;;;22975:124;;;;;23106:256;;23168:2;23162:9;23152:19;;23206:4;23198:6;23194:17;23305:6;23293:10;23290:22;23269:18;23257:10;23254:34;23251:62;23248:2;;;23326:1;23323;23316:12;23248:2;23346:10;23342:2;23335:22;23146:216;;;;;23369:229;;23522:18;23514:6;23511:30;23508:2;;;23554:1;23551;23544:12;23508:2;23583:4;23575:6;23571:17;23563:25;;23445:153;;;;23605:233;;23762:18;23754:6;23751:30;23748:2;;;23794:1;23791;23784:12;23748:2;23823:4;23815:6;23811:17;23803:25;;23685:153;;;;23845:258;;23988:18;23980:6;23977:30;23974:2;;;24020:1;24017;24010:12;23974:2;24064:4;24060:9;24053:4;24045:6;24041:17;24037:33;24029:41;;24093:4;24087;24083:15;24075:23;;23911:192;;;;24110:259;;24254:18;24246:6;24243:30;24240:2;;;24286:1;24283;24276:12;24240:2;24330:4;24326:9;24319:4;24311:6;24307:17;24303:33;24295:41;;24359:4;24353;24349:15;24341:23;;24177:192;;;;24378:104;;24469:6;24458:17;;24450:32;;;;24491:92;;24575:3;24565:13;;24559:24;;;;24590:91;;24670:5;24664:12;24654:22;;24648:33;;;;24688:92;;24769:5;24763:12;24753:22;;24747:33;;;;24788:116;;24893:4;24885:6;24881:17;24870:28;;24863:41;;;;24913:130;;25034:3;25019:18;;25012:31;;;;;25052:162;;25166:6;25161:3;25154:19;25203:4;25198:3;25194:14;25179:29;;25147:67;;;;;25223:163;;25338:6;25333:3;25326:19;25375:4;25370:3;25366:14;25351:29;;25319:67;;;;;25394:105;;25463:31;25488:5;25463:31;;;25452:42;;25446:53;;;;25506:92;;25586:5;25579:13;25572:21;25561:32;;25555:43;;;;25605:128;;25685:42;25678:5;25674:54;25663:65;;25657:76;;;;25740:79;;25809:5;25798:16;;25792:27;;;;25826:105;;25895:31;25920:5;25895:31;;;25884:42;;25878:53;;;;25938:92;;26018:5;26011:13;26004:21;25993:32;;25987:43;;;;26037:79;;26106:5;26095:16;;26089:27;;;;26123:151;;26202:66;26195:5;26191:78;26180:89;;26174:100;;;;26281:128;;26361:42;26354:5;26350:54;26339:65;;26333:76;;;;26416:79;;26485:5;26474:16;;26468:27;;;;26502:129;;26589:37;26620:5;26589:37;;;26576:50;;26570:61;;;;26638:121;;26717:37;26748:5;26717:37;;;26704:50;;26698:61;;;;26766:115;;26845:31;26870:5;26845:31;;;26832:44;;26826:55;;;;26889:145;26970:6;26965:3;26960;26947:30;27026:1;27017:6;27012:3;27008:16;27001:27;26940:94;;;;27043:268;27108:1;27115:101;27129:6;27126:1;27123:13;27115:101;;;27205:1;27200:3;27196:11;27190:18;27186:1;27181:3;27177:11;27170:39;27151:2;27148:1;27144:10;27139:15;;27115:101;;;27231:6;27228:1;27225:13;27222:2;;;27296:1;27287:6;27282:3;27278:16;27271:27;27222:2;27092:219;;;;;27319:97;;27407:2;27403:7;27398:2;27391:5;27387:14;27383:28;27373:38;;27367:49;;;",
  "source": "pragma solidity >0.5.5;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n  using Counters for Counters.Counter;\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n    bytes32 index;\n    address caller;\n  }\n  // keep track of the generated tokenIds\n  Counters.Counter tokenId;\n  // TODO define an array of the above struct\n  Solution[] solutions;\n  // TODO define a mapping to store unique solutions submitted\n  mapping(address => Solution) uniqSolutions;\n  // TODO Create an event to emit when a solution is added\n  event SolutionAdded(bytes32 indexed index, address indexed caller);\n  // check wether a solution has been submitted for a given caller\n  modifier isUniqSolution(Proof memory proof, address caller) {\n    require(\n      uniqSolutions[caller].index != keccak256(abi.encode(proof)),\n      \"proof must be uniq\"\n    );\n    _;\n  }\n\n  // TODO Create a function to add the solutions to the array and emit the event\n  function add(Proof memory proof, address caller) public {\n    bytes32 _proof = keccak256(abi.encode(proof));\n    Solution memory _solution = Solution({ index: _proof, caller: caller });\n    solutions.push(_solution);\n    uniqSolutions[caller] = _solution;\n    emit SolutionAdded(_proof, caller);\n  }\n\n  // TODO Create a function to mint new NFT only after the solution has been verified\n  //  - make sure the solution is unique (has not been used before)\n  //  - make sure you handle metadata as well as tokenSuplly\n\n  function mintToken(Proof memory proof, uint256[2] memory inputs)\n    public\n    isUniqSolution(proof, msg.sender)\n  {\n    bool check = verifyTx(proof, inputs);\n    require(check, \"proof must be valid\");\n    this.add(proof, msg.sender);\n    tokenId.increment();\n    mint(msg.sender, tokenId.current());\n  }\n\n}\n",
  "sourcePath": "/home/bzzzpy/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7850
      ]
    },
    "id": 7851,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7707,
        "literals": [
          "solidity",
          ">",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 7708,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7709,
        "nodeType": "ImportDirective",
        "scope": 7851,
        "sourceUnit": 1438,
        "src": "59:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7710,
        "nodeType": "ImportDirective",
        "scope": 7851,
        "sourceUnit": 10329,
        "src": "90:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7711,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1437,
              "src": "357:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1437",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7712,
            "nodeType": "InheritanceSpecifier",
            "src": "357:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7713,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10328,
              "src": "376:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10328",
                "typeString": "contract Verifier"
              }
            },
            "id": 7714,
            "nodeType": "InheritanceSpecifier",
            "src": "376:8:6"
          }
        ],
        "contractDependencies": [
          404,
          470,
          1297,
          1398,
          1437,
          999,
          516,
          7705,
          10328
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7850,
        "linearizedBaseContracts": [
          7850,
          10328,
          1437,
          1398,
          7705,
          1297,
          999,
          516,
          470,
          404
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7717,
            "libraryName": {
              "contractScope": null,
              "id": 7715,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 48,
              "src": "395:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$48",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "389:36:6",
            "typeName": {
              "contractScope": null,
              "id": 7716,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8,
              "src": "408:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7722,
            "members": [
              {
                "constant": false,
                "id": 7719,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7722,
                "src": "522:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7718,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7721,
                "name": "caller",
                "nodeType": "VariableDeclaration",
                "scope": 7722,
                "src": "541:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7720,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "541:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7850,
            "src": "500:60:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7724,
            "name": "tokenId",
            "nodeType": "VariableDeclaration",
            "scope": 7850,
            "src": "605:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$8_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 7723,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8,
              "src": "605:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7727,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7850,
            "src": "679:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7722_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7725,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7722,
                "src": "679:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7722_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7726,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "679:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7722_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7731,
            "name": "uniqSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7850,
            "src": "766:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7722_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7730,
              "keyType": {
                "id": 7728,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "774:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "766:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7722_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7729,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7722,
                "src": "785:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7722_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7737,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7733,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7737,
                  "src": "891:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7735,
                  "indexed": true,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7737,
                  "src": "914:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:47:6"
            },
            "src": "871:67:6"
          },
          {
            "body": {
              "id": 7759,
              "nodeType": "Block",
              "src": "1068:126:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7744,
                              "name": "uniqSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7731,
                              "src": "1089:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7722_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7746,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7745,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7741,
                              "src": "1103:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1089:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7722_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7747,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7719,
                          "src": "1089:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7751,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7739,
                                  "src": "1141:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7749,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10330,
                                  "src": "1130:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 7750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1130:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 7752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1130:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7748,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10337,
                            "src": "1120:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 7753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1120:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1089:59:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6f66206d75737420626520756e6971",
                        "id": 7755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1156:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bef7bf0358de634bf82415ae4adf49da5d210647ce90f3533a055f58b9acf1e6",
                          "typeString": "literal_string \"proof must be uniq\""
                        },
                        "value": "proof must be uniq"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bef7bf0358de634bf82415ae4adf49da5d210647ce90f3533a055f58b9acf1e6",
                          "typeString": "literal_string \"proof must be uniq\""
                        }
                      ],
                      "id": 7743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10346,
                        10347
                      ],
                      "referencedDeclaration": 10347,
                      "src": "1074:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:108:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:108:6"
                },
                {
                  "id": 7758,
                  "nodeType": "PlaceholderStatement",
                  "src": "1188:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 7760,
            "name": "isUniqSolution",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7739,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7760,
                  "src": "1032:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7738,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10002,
                    "src": "1032:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$10002_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7741,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7760,
                  "src": "1052:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1031:36:6"
            },
            "src": "1008:186:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7800,
              "nodeType": "Block",
              "src": "1335:243:6",
              "statements": [
                {
                  "assignments": [
                    7768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7768,
                      "name": "_proof",
                      "nodeType": "VariableDeclaration",
                      "scope": 7800,
                      "src": "1341:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7767,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1341:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7775,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7772,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7762,
                            "src": "1379:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7770,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10330,
                            "src": "1368:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1368:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7769,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10337,
                      "src": "1358:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:45:6"
                },
                {
                  "assignments": [
                    7777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7777,
                      "name": "_solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7800,
                      "src": "1392:25:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7722_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7776,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7722,
                        "src": "1392:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7722_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7782,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7779,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7768,
                        "src": "1438:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7780,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "1454:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 7778,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7722,
                      "src": "1420:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7722_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "caller"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1420:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7722_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:71:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7786,
                        "name": "_solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7777,
                        "src": "1484:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7722_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7722_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7783,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7727,
                        "src": "1469:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7722_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1469:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7722_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1469:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:25:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7789,
                        "name": "uniqSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1500:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7722_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7791,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "1514:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1500:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7722_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7792,
                      "name": "_solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7777,
                      "src": "1524:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7722_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1500:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7722_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7794,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:33:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7796,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7768,
                        "src": "1558:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7797,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "1566:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7795,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7737,
                      "src": "1544:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7799,
                  "nodeType": "EmitStatement",
                  "src": "1539:34:6"
                }
              ]
            },
            "documentation": null,
            "id": 7801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7762,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1292:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7761,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10002,
                    "src": "1292:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$10002_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7764,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1312:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1291:36:6"
            },
            "returnParameters": {
              "id": 7766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:6"
            },
            "scope": 7850,
            "src": "1279:299:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7848,
              "nodeType": "Block",
              "src": "1914:189:6",
              "statements": [
                {
                  "assignments": [
                    7816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7816,
                      "name": "check",
                      "nodeType": "VariableDeclaration",
                      "scope": 7848,
                      "src": "1920:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7815,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1920:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7821,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7818,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7803,
                        "src": "1942:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7819,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7807,
                        "src": "1949:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7817,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10327,
                      "src": "1933:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proof_$10002_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view returns (bool)"
                      }
                    },
                    "id": 7820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1920:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7823,
                        "name": "check",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7816,
                        "src": "1970:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6f66206d7573742062652076616c6964",
                        "id": 7824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:21:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7343b550aca1359fa12b84ae5f4188680f2e4cea4f77d4779048b5f50753b0f5",
                          "typeString": "literal_string \"proof must be valid\""
                        },
                        "value": "proof must be valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7343b550aca1359fa12b84ae5f4188680f2e4cea4f77d4779048b5f50753b0f5",
                          "typeString": "literal_string \"proof must be valid\""
                        }
                      ],
                      "id": 7822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10346,
                        10347
                      ],
                      "referencedDeclaration": 10347,
                      "src": "1962:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7826,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7830,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7803,
                        "src": "2014:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7831,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10343,
                          "src": "2021:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2021:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7827,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10397,
                        "src": "2005:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SolnSquareVerifier_$7850",
                          "typeString": "contract SolnSquareVerifier"
                        }
                      },
                      "id": 7829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7801,
                      "src": "2005:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Proof_$10002_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct Verifier.Proof memory,address) external"
                      }
                    },
                    "id": 7833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7834,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7835,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7724,
                        "src": "2038:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$8_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 7837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2038:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$8_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$8_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 7838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7839,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:19:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10343,
                          "src": "2068:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2068:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7843,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7724,
                            "src": "2080:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$8_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 7844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "2080:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$8_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$8_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 7845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2080:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7840,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "2063:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7847,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:35:6"
                }
              ]
            },
            "documentation": null,
            "id": 7849,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7810,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7803,
                    "src": "1893:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                      "typeString": "struct Verifier.Proof memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7811,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10343,
                      "src": "1900:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1900:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 7813,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7809,
                  "name": "isUniqSolution",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7760,
                  "src": "1878:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Proof_$10002_memory_ptr_$_t_address_$",
                    "typeString": "modifier (struct Verifier.Proof memory,address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1878:33:6"
              }
            ],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7849,
                  "src": "1817:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7802,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10002,
                    "src": "1817:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$10002_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7807,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7849,
                  "src": "1837:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7804,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1837:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7806,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1845:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1837:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:46:6"
            },
            "returnParameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1914:0:6"
            },
            "scope": 7850,
            "src": "1798:305:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7851,
        "src": "326:1780:6"
      }
    ],
    "src": "0:2107:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7850
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">",
            "0.5",
            ".5"
          ]
        },
        "id": 7707,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7708,
        "name": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 1438,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7851,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7709,
        "name": "ImportDirective",
        "src": "59:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 10329,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7851,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7710,
        "name": "ImportDirective",
        "src": "90:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            404,
            470,
            1297,
            1398,
            1437,
            999,
            516,
            7705,
            10328
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7850,
            10328,
            1437,
            1398,
            7705,
            1297,
            999,
            516,
            470,
            404
          ],
          "name": "SolnSquareVerifier",
          "scope": 7851
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1437,
                  "type": "contract CustomERC721Token"
                },
                "id": 7711,
                "name": "UserDefinedTypeName",
                "src": "357:17:6"
              }
            ],
            "id": 7712,
            "name": "InheritanceSpecifier",
            "src": "357:17:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10328,
                  "type": "contract Verifier"
                },
                "id": 7713,
                "name": "UserDefinedTypeName",
                "src": "376:8:6"
              }
            ],
            "id": 7714,
            "name": "InheritanceSpecifier",
            "src": "376:8:6"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters",
                  "referencedDeclaration": 48,
                  "type": "library Counters"
                },
                "id": 7715,
                "name": "UserDefinedTypeName",
                "src": "395:8:6"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters.Counter",
                  "referencedDeclaration": 8,
                  "type": "struct Counters.Counter"
                },
                "id": 7716,
                "name": "UserDefinedTypeName",
                "src": "408:16:6"
              }
            ],
            "id": 7717,
            "name": "UsingForDirective",
            "src": "389:36:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7850,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7722,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7718,
                    "name": "ElementaryTypeName",
                    "src": "522:7:6"
                  }
                ],
                "id": 7719,
                "name": "VariableDeclaration",
                "src": "522:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "caller",
                  "scope": 7722,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7720,
                    "name": "ElementaryTypeName",
                    "src": "541:7:6"
                  }
                ],
                "id": 7721,
                "name": "VariableDeclaration",
                "src": "541:14:6"
              }
            ],
            "id": 7722,
            "name": "StructDefinition",
            "src": "500:60:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tokenId",
              "scope": 7850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct Counters.Counter",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters.Counter",
                  "referencedDeclaration": 8,
                  "type": "struct Counters.Counter"
                },
                "id": 7723,
                "name": "UserDefinedTypeName",
                "src": "605:16:6"
              }
            ],
            "id": 7724,
            "name": "VariableDeclaration",
            "src": "605:24:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7722,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7725,
                    "name": "UserDefinedTypeName",
                    "src": "679:8:6"
                  }
                ],
                "id": 7726,
                "name": "ArrayTypeName",
                "src": "679:10:6"
              }
            ],
            "id": 7727,
            "name": "VariableDeclaration",
            "src": "679:20:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqSolutions",
              "scope": 7850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 7728,
                    "name": "ElementaryTypeName",
                    "src": "774:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7722,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7729,
                    "name": "UserDefinedTypeName",
                    "src": "785:8:6"
                  }
                ],
                "id": 7730,
                "name": "Mapping",
                "src": "766:28:6"
              }
            ],
            "id": 7731,
            "name": "VariableDeclaration",
            "src": "766:42:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "index",
                      "scope": 7737,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7732,
                        "name": "ElementaryTypeName",
                        "src": "891:7:6"
                      }
                    ],
                    "id": 7733,
                    "name": "VariableDeclaration",
                    "src": "891:21:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "caller",
                      "scope": 7737,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7734,
                        "name": "ElementaryTypeName",
                        "src": "914:7:6"
                      }
                    ],
                    "id": 7735,
                    "name": "VariableDeclaration",
                    "src": "914:22:6"
                  }
                ],
                "id": 7736,
                "name": "ParameterList",
                "src": "890:47:6"
              }
            ],
            "id": 7737,
            "name": "EventDefinition",
            "src": "871:67:6"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "isUniqSolution",
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7760,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 10002,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7738,
                        "name": "UserDefinedTypeName",
                        "src": "1032:5:6"
                      }
                    ],
                    "id": 7739,
                    "name": "VariableDeclaration",
                    "src": "1032:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "caller",
                      "scope": 7760,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7740,
                        "name": "ElementaryTypeName",
                        "src": "1052:7:6"
                      }
                    ],
                    "id": 7741,
                    "name": "VariableDeclaration",
                    "src": "1052:14:6"
                  }
                ],
                "id": 7742,
                "name": "ParameterList",
                "src": "1031:36:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bef7bf0358de634bf82415ae4adf49da5d210647ce90f3533a055f58b9acf1e6",
                                  "typeString": "literal_string \"proof must be uniq\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10346,
                                10347
                              ],
                              "referencedDeclaration": 10347,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7743,
                            "name": "Identifier",
                            "src": "1074:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "index",
                                  "referencedDeclaration": 7719,
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7731,
                                          "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqSolutions"
                                        },
                                        "id": 7744,
                                        "name": "Identifier",
                                        "src": "1089:13:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7741,
                                          "type": "address",
                                          "value": "caller"
                                        },
                                        "id": 7745,
                                        "name": "Identifier",
                                        "src": "1103:6:6"
                                      }
                                    ],
                                    "id": 7746,
                                    "name": "IndexAccess",
                                    "src": "1089:21:6"
                                  }
                                ],
                                "id": 7747,
                                "name": "MemberAccess",
                                "src": "1089:27:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10337,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 7748,
                                    "name": "Identifier",
                                    "src": "1120:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                              "typeString": "struct Verifier.Proof memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encode",
                                          "referencedDeclaration": null,
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10330,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 7749,
                                            "name": "Identifier",
                                            "src": "1130:3:6"
                                          }
                                        ],
                                        "id": 7750,
                                        "name": "MemberAccess",
                                        "src": "1130:10:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7739,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7751,
                                        "name": "Identifier",
                                        "src": "1141:5:6"
                                      }
                                    ],
                                    "id": 7752,
                                    "name": "FunctionCall",
                                    "src": "1130:17:6"
                                  }
                                ],
                                "id": 7753,
                                "name": "FunctionCall",
                                "src": "1120:28:6"
                              }
                            ],
                            "id": 7754,
                            "name": "BinaryOperation",
                            "src": "1089:59:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "70726f6f66206d75737420626520756e6971",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"proof must be uniq\"",
                              "value": "proof must be uniq"
                            },
                            "id": 7755,
                            "name": "Literal",
                            "src": "1156:20:6"
                          }
                        ],
                        "id": 7756,
                        "name": "FunctionCall",
                        "src": "1074:108:6"
                      }
                    ],
                    "id": 7757,
                    "name": "ExpressionStatement",
                    "src": "1074:108:6"
                  },
                  {
                    "id": 7758,
                    "name": "PlaceholderStatement",
                    "src": "1188:1:6"
                  }
                ],
                "id": 7759,
                "name": "Block",
                "src": "1068:126:6"
              }
            ],
            "id": 7760,
            "name": "ModifierDefinition",
            "src": "1008:186:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "add",
              "scope": 7850,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7801,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 10002,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7761,
                        "name": "UserDefinedTypeName",
                        "src": "1292:5:6"
                      }
                    ],
                    "id": 7762,
                    "name": "VariableDeclaration",
                    "src": "1292:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "caller",
                      "scope": 7801,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7763,
                        "name": "ElementaryTypeName",
                        "src": "1312:7:6"
                      }
                    ],
                    "id": 7764,
                    "name": "VariableDeclaration",
                    "src": "1312:14:6"
                  }
                ],
                "id": 7765,
                "name": "ParameterList",
                "src": "1291:36:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7766,
                "name": "ParameterList",
                "src": "1335:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7768
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_proof",
                          "scope": 7800,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7767,
                            "name": "ElementaryTypeName",
                            "src": "1341:7:6"
                          }
                        ],
                        "id": 7768,
                        "name": "VariableDeclaration",
                        "src": "1341:14:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10337,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7769,
                            "name": "Identifier",
                            "src": "1358:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10330,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7770,
                                    "name": "Identifier",
                                    "src": "1368:3:6"
                                  }
                                ],
                                "id": 7771,
                                "name": "MemberAccess",
                                "src": "1368:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7762,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7772,
                                "name": "Identifier",
                                "src": "1379:5:6"
                              }
                            ],
                            "id": 7773,
                            "name": "FunctionCall",
                            "src": "1368:17:6"
                          }
                        ],
                        "id": 7774,
                        "name": "FunctionCall",
                        "src": "1358:28:6"
                      }
                    ],
                    "id": 7775,
                    "name": "VariableDeclarationStatement",
                    "src": "1341:45:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7777
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_solution",
                          "scope": 7800,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7722,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7776,
                            "name": "UserDefinedTypeName",
                            "src": "1392:8:6"
                          }
                        ],
                        "id": 7777,
                        "name": "VariableDeclaration",
                        "src": "1392:25:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "caller"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7722,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7778,
                            "name": "Identifier",
                            "src": "1420:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7768,
                              "type": "bytes32",
                              "value": "_proof"
                            },
                            "id": 7779,
                            "name": "Identifier",
                            "src": "1438:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7764,
                              "type": "address",
                              "value": "caller"
                            },
                            "id": 7780,
                            "name": "Identifier",
                            "src": "1454:6:6"
                          }
                        ],
                        "id": 7781,
                        "name": "FunctionCall",
                        "src": "1420:43:6"
                      }
                    ],
                    "id": 7782,
                    "name": "VariableDeclarationStatement",
                    "src": "1392:71:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7722_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7727,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7783,
                                "name": "Identifier",
                                "src": "1469:9:6"
                              }
                            ],
                            "id": 7785,
                            "name": "MemberAccess",
                            "src": "1469:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7777,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "_solution"
                            },
                            "id": 7786,
                            "name": "Identifier",
                            "src": "1484:9:6"
                          }
                        ],
                        "id": 7787,
                        "name": "FunctionCall",
                        "src": "1469:25:6"
                      }
                    ],
                    "id": 7788,
                    "name": "ExpressionStatement",
                    "src": "1469:25:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7731,
                                  "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqSolutions"
                                },
                                "id": 7789,
                                "name": "Identifier",
                                "src": "1500:13:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7764,
                                  "type": "address",
                                  "value": "caller"
                                },
                                "id": 7790,
                                "name": "Identifier",
                                "src": "1514:6:6"
                              }
                            ],
                            "id": 7791,
                            "name": "IndexAccess",
                            "src": "1500:21:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7777,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "_solution"
                            },
                            "id": 7792,
                            "name": "Identifier",
                            "src": "1524:9:6"
                          }
                        ],
                        "id": 7793,
                        "name": "Assignment",
                        "src": "1500:33:6"
                      }
                    ],
                    "id": 7794,
                    "name": "ExpressionStatement",
                    "src": "1500:33:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7737,
                              "type": "function (bytes32,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7795,
                            "name": "Identifier",
                            "src": "1544:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7768,
                              "type": "bytes32",
                              "value": "_proof"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1558:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7764,
                              "type": "address",
                              "value": "caller"
                            },
                            "id": 7797,
                            "name": "Identifier",
                            "src": "1566:6:6"
                          }
                        ],
                        "id": 7798,
                        "name": "FunctionCall",
                        "src": "1544:29:6"
                      }
                    ],
                    "id": 7799,
                    "name": "EmitStatement",
                    "src": "1539:34:6"
                  }
                ],
                "id": 7800,
                "name": "Block",
                "src": "1335:243:6"
              }
            ],
            "id": 7801,
            "name": "FunctionDefinition",
            "src": "1279:299:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintToken",
              "scope": 7850,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7849,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 10002,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7802,
                        "name": "UserDefinedTypeName",
                        "src": "1817:5:6"
                      }
                    ],
                    "id": 7803,
                    "name": "VariableDeclaration",
                    "src": "1817:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 7849,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7804,
                            "name": "ElementaryTypeName",
                            "src": "1837:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7805,
                            "name": "Literal",
                            "src": "1845:1:6"
                          }
                        ],
                        "id": 7806,
                        "name": "ArrayTypeName",
                        "src": "1837:10:6"
                      }
                    ],
                    "id": 7807,
                    "name": "VariableDeclaration",
                    "src": "1837:24:6"
                  }
                ],
                "id": 7808,
                "name": "ParameterList",
                "src": "1816:46:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7814,
                "name": "ParameterList",
                "src": "1914:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7760,
                      "type": "modifier (struct Verifier.Proof memory,address)",
                      "value": "isUniqSolution"
                    },
                    "id": 7809,
                    "name": "Identifier",
                    "src": "1878:14:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7803,
                      "type": "struct Verifier.Proof memory",
                      "value": "proof"
                    },
                    "id": 7810,
                    "name": "Identifier",
                    "src": "1893:5:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 10343,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 7811,
                        "name": "Identifier",
                        "src": "1900:3:6"
                      }
                    ],
                    "id": 7812,
                    "name": "MemberAccess",
                    "src": "1900:10:6"
                  }
                ],
                "id": 7813,
                "name": "ModifierInvocation",
                "src": "1878:33:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7816
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "check",
                          "scope": 7848,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7815,
                            "name": "ElementaryTypeName",
                            "src": "1920:4:6"
                          }
                        ],
                        "id": 7816,
                        "name": "VariableDeclaration",
                        "src": "1920:10:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10327,
                              "type": "function (struct Verifier.Proof memory,uint256[2] memory) view returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7817,
                            "name": "Identifier",
                            "src": "1933:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7803,
                              "type": "struct Verifier.Proof memory",
                              "value": "proof"
                            },
                            "id": 7818,
                            "name": "Identifier",
                            "src": "1942:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7807,
                              "type": "uint256[2] memory",
                              "value": "inputs"
                            },
                            "id": 7819,
                            "name": "Identifier",
                            "src": "1949:6:6"
                          }
                        ],
                        "id": 7820,
                        "name": "FunctionCall",
                        "src": "1933:23:6"
                      }
                    ],
                    "id": 7821,
                    "name": "VariableDeclarationStatement",
                    "src": "1920:36:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7343b550aca1359fa12b84ae5f4188680f2e4cea4f77d4779048b5f50753b0f5",
                                  "typeString": "literal_string \"proof must be valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10346,
                                10347
                              ],
                              "referencedDeclaration": 10347,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7822,
                            "name": "Identifier",
                            "src": "1962:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7816,
                              "type": "bool",
                              "value": "check"
                            },
                            "id": 7823,
                            "name": "Identifier",
                            "src": "1970:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "70726f6f66206d7573742062652076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"proof must be valid\"",
                              "value": "proof must be valid"
                            },
                            "id": 7824,
                            "name": "Literal",
                            "src": "1977:21:6"
                          }
                        ],
                        "id": 7825,
                        "name": "FunctionCall",
                        "src": "1962:37:6"
                      }
                    ],
                    "id": 7826,
                    "name": "ExpressionStatement",
                    "src": "1962:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Proof_$10002_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 7801,
                              "type": "function (struct Verifier.Proof memory,address) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10397,
                                  "type": "contract SolnSquareVerifier",
                                  "value": "this"
                                },
                                "id": 7827,
                                "name": "Identifier",
                                "src": "2005:4:6"
                              }
                            ],
                            "id": 7829,
                            "name": "MemberAccess",
                            "src": "2005:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7803,
                              "type": "struct Verifier.Proof memory",
                              "value": "proof"
                            },
                            "id": 7830,
                            "name": "Identifier",
                            "src": "2014:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10343,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7831,
                                "name": "Identifier",
                                "src": "2021:3:6"
                              }
                            ],
                            "id": 7832,
                            "name": "MemberAccess",
                            "src": "2021:10:6"
                          }
                        ],
                        "id": 7833,
                        "name": "FunctionCall",
                        "src": "2005:27:6"
                      }
                    ],
                    "id": 7834,
                    "name": "ExpressionStatement",
                    "src": "2005:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 31,
                              "type": "function (struct Counters.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7724,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "tokenId"
                                },
                                "id": 7835,
                                "name": "Identifier",
                                "src": "2038:7:6"
                              }
                            ],
                            "id": 7837,
                            "name": "MemberAccess",
                            "src": "2038:17:6"
                          }
                        ],
                        "id": 7838,
                        "name": "FunctionCall",
                        "src": "2038:19:6"
                      }
                    ],
                    "id": 7839,
                    "name": "ExpressionStatement",
                    "src": "2038:19:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1436,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7840,
                            "name": "Identifier",
                            "src": "2063:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10343,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7841,
                                "name": "Identifier",
                                "src": "2068:3:6"
                              }
                            ],
                            "id": 7842,
                            "name": "MemberAccess",
                            "src": "2068:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "current",
                                  "referencedDeclaration": 19,
                                  "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7724,
                                      "type": "struct Counters.Counter storage ref",
                                      "value": "tokenId"
                                    },
                                    "id": 7843,
                                    "name": "Identifier",
                                    "src": "2080:7:6"
                                  }
                                ],
                                "id": 7844,
                                "name": "MemberAccess",
                                "src": "2080:15:6"
                              }
                            ],
                            "id": 7845,
                            "name": "FunctionCall",
                            "src": "2080:17:6"
                          }
                        ],
                        "id": 7846,
                        "name": "FunctionCall",
                        "src": "2063:35:6"
                      }
                    ],
                    "id": 7847,
                    "name": "ExpressionStatement",
                    "src": "2063:35:6"
                  }
                ],
                "id": 7848,
                "name": "Block",
                "src": "1914:189:6"
              }
            ],
            "id": 7849,
            "name": "FunctionDefinition",
            "src": "1798:305:6"
          }
        ],
        "id": 7850,
        "name": "ContractDefinition",
        "src": "326:1780:6"
      }
    ],
    "id": 7851,
    "name": "SourceUnit",
    "src": "0:2107:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x8D0A45C467DC1c7255b9Fcb759bE80c495617088",
      "transactionHash": "0x91a102d2ba31d05ce44e1f5452db1ed46e1d1e4c5870808a952ebd5dbabc23aa"
    },
    "1630657922482": {
      "events": {},
      "links": {},
      "address": "0x8aC0F88E6Bdcb0d73Cd99324600406B79824B50F",
      "transactionHash": "0x54852a2f6340d1c2e8c24701ece10824de4b1b3f15c063122214881d194158bf"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-03T11:01:27.730Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {
      "name()": {
        "notice": "A descriptive name for a collection of NFTs in this contract"
      },
      "symbol()": {
        "notice": "An abbreviated name for NFTs in this contract"
      }
    }
  }
}